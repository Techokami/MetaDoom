/*
----------------------------
MetaDoom
Actor Definitions
Powerup Items
----------------------------
*/

// Radsuit
class MetaRadSuit : PowerupGiver replaces RadSuit
{
	Default
	{
		Height 46;
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		Inventory.MaxAmount 0;
		Inventory.PickupMessage "$GOTSUIT";
		powerup.type "PowerMetaIronFeet";
		Inventory.PickupSound "powerups/radsuit";
		TeleFogSourceType "MetaItemFog";
		TeleFogDestType "MetaItemFog";
	}
	
	States
	{
	Spawn:
		SUIT A -1 Bright;
		Stop;
	}
}

class PowerMetaIronFeet : PowerIronFeet
{
	int runoutwarnings;
	int runouttimer;
	
	override void Tick()
	{
		Super.Tick();
		
		if (runoutwarnings > 0)
		{
			runouttimer++;
		}
		
		if (isBlinking() && runoutwarnings == 0)
		{
			owner.A_StartSound("powerups/runninglow/radsuit", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			owner.A_Log ("$RUNOUT_RADSUIT", 1);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 1) {
			owner.A_StartSound("powerups/runninglow/radsuit", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 2) {
			owner.A_StartSound("powerups/runninglow/radsuit", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 3) {
			owner.A_StartSound("powerups/runninglow/radsuit", 999, CHANF_LOCAL|CHANF_UI, 0.5, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		}
	}
}

// Berserk
class BerserkSpawner : Actor replaces Berserk
{
	mixin LootSpawn;
	
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_JumpIf(meta_retroberserk == 1, "Berserk");
		TNT1 A 0 A_Jump(64, "Quad");
		goto Berserk;
	Berserk:
		TNT1 A 0 A_SpawnItemEx("MetaBerserk",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION);
		stop;
	Quad:
		TNT1 A 0 
		{	
			A_SpawnItemEx("MetaQuadDamage",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERAMBUSHFLAG|SXF_TRANSFERSPECIAL|SXF_NOCHECKPOSITION);
			A_SpawnLoot("MetaMedikitNoItemSpawn");
			A_SpawnLoot("MetaMedikitNoItemSpawn");
			A_SpawnLoot("MetaMedikitNoItemSpawn");
			A_SpawnLoot("MetaMedikitNoItemSpawn");
		}
		stop;
	}
}

class MetaBerserk : CustomInventory //replaces Berserk
{
	Default
	{
		+COUNTITEM
		+INVENTORY.ALWAYSPICKUP
		Inventory.PickupMessage "$GOTBERSERK";
		Inventory.PickupSound "powerups/berserk";
		TeleFogSourceType "MetaItemFog";
		TeleFogDestType "MetaItemFog";
		//$Category "Powerups/MetaDoom"
		//$Title "Berserker Pack"
		//$NotAngled
		//$Color 9
	}
	
	States
	{
	Spawn:
		PSTR A -1;
		Stop;
	Pickup:
		TNT1 A 0 A_JumpIf(meta_retroberserk == 1, "ClassicPickup");
		TNT1 A 0 A_TakeInventory("PowerMetaBerserkTimer", 999);
		TNT1 A 0 A_GiveInventory("MetaBerserkTimer");
		TNT1 A 0 A_GiveInventory("MetaBerserkFist");
		TNT1 A 0 HealThing(100, 0);
		TNT1 A 0 A_SelectWeapon("MetaBerserkFist");
		Stop;
	ClassicPickup:
		TNT1 A 0 A_GiveInventory("PowerStrength");
		TNT1 A 0 A_GiveInventory("MetaBerserkFist");
		TNT1 A 0 HealThing(100, 0);
		TNT1 A 0 A_SelectWeapon("MetaBerserkFist");
		Stop;
	}
}

// PowerStrength timers are fucked in ways I can't recall (I think they went in
// reverse?) so I used an unused, otherwise effectless powerup type as a patsy.
// Look, this was before ZScript and defining your own power types, okay?!?
class MetaBerserkTimer : PowerupGiver
{
	Default
	{
		+INVENTORY.AUTOACTIVATE
		powerup.type "PowerMetaBerserkTimer";
		Powerup.Duration -60;
		Powerup.Color "FF 00 00", 0.3;
		TeleFogSourceType "MetaItemFog";
		TeleFogDestType "MetaItemFog";
	}
	
	States
	{
	Spawn:
		SUIT A -1 Bright;
		Stop;
	}
}

class PowerMetaBerserkTimer : Powerup
{
	int runoutwarnings;
	int runouttimer;
	
	Default
	{
		Powerup.Duration -40;
		+INVENTORY.NOTELEPORTFREEZE
	}
	
	override void InitEffect ()
	{
		
		Super.InitEffect();
		let player = Owner.player;
	}

	override void EndEffect ()
	{
		Super.EndEffect();
		if (Owner == null) return;
		let player = Owner.player;
	}	
	
	override void Tick()
	{
		Super.Tick();
		
		if (runoutwarnings > 0)
		{
			runouttimer++;
		}
		
		if (isBlinking() && runoutwarnings == 0)
		{
			owner.A_StartSound("powerups/runninglow/berserk", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			owner.A_Log ("$RUNOUT_BERSERK", 1);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 1) {
			owner.A_StartSound("powerups/runninglow/berserk", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 2) {
			owner.A_StartSound("powerups/runninglow/berserk", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 3) {
			owner.A_StartSound("powerups/runninglow/berserk", 999, CHANF_LOCAL|CHANF_UI, 0.5, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		}
	}
}

// LightAmp
class MetaLightAmp : PowerupGiver replaces Infrared
{
	Default
	{
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		Inventory.MaxAmount 0;
		powerup.type "PowerMetaLightAmp";
		Inventory.PickupMessage "$GOTVISOR";
		Inventory.PickupSound "items/lightamp";
		TeleFogSourceType "MetaItemFog";
		TeleFogDestType "MetaItemFog";
	}
	
	States
	{
	Spawn:
		PVIS A 6 Bright;
		PVIS B 6;
		Loop;
	}
}

class PowerMetaLightAmp : PowerLightAmp
{
	int runoutwarnings;
	int runouttimer;
	
	override void Tick()
	{
		Super.Tick();
		
		if (runoutwarnings > 0)
		{
			runouttimer++;
		}
		
		if (isBlinking() && runoutwarnings == 0)
		{
			owner.A_StartSound("powerups/runninglow/lightamp", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			owner.A_Log ("$RUNOUT_LIGHTAMP", 1);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 1) {
			owner.A_StartSound("powerups/runninglow/lightamp", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 2) {
			owner.A_StartSound("powerups/runninglow/lightamp", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 3) {
			owner.A_StartSound("powerups/runninglow/lightamp", 999, CHANF_LOCAL|CHANF_UI, 0.5, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		}
	}
}

// Haste
// Has a 25% chance of spawning a Hologram alongside it
class MetaHasteSphere : PowerupGiver replaces BlurSphere
{
	Default
	{
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.BIGPOWERUP
		+FLOATBOB
		Inventory.MaxAmount 0;
		powerup.type "PowerMetaSpeed";
		Speed 1.5;
		scale 0.75;
		RenderStyle "Translucent";
		Inventory.PickupMessage "$GOTHASTE";
		Inventory.PickupSound "powerups/haste";
		TeleFogSourceType "MetaItemFog";
		TeleFogDestType "MetaItemFog";
	}
	
	mixin LootSpawn;
	
	States
	{
	Spawn:
		HAST A 0;
		HAST A 0 A_Jump(64, "SpawnInv");
		goto Chill;
	SpawnInv:
		HAST A 0 A_Jump(256, "Hologram");
		goto Chill;
	Hologram:
		HAST A 0 A_SpawnLoot("HologramPickup");
		goto Chill;
	Chill:
		HAST ABCD 2 Bright;
		Loop;
	}
}

class MetaHasteSphereNoItemChance : CustomInventory
{
	Default
	{
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.BIGPOWERUP
		+FLOATBOB
		Speed 1.5;
		scale 0.75;
		RenderStyle "Translucent";
		Inventory.PickupMessage "$GOTHASTE";
		Inventory.PickupSound "powerups/haste";
		TeleFogSourceType "MetaItemFog";
		TeleFogDestType "MetaItemFog";
		//$Category "Powerups/MetaDoom"
		//$Title "Haste Sphere (No Item Spawn Chance)"
		//$NotAngled
		//$Color 9
	}
	States
	{
	Spawn:
		HAST ABCD 2 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_GiveInventory("MetaHasteSphere", 1);
		Stop;
	}
}

class PowerMetaSpeed : PowerSpeed
{
	int runoutwarnings;
	int runouttimer;
	
	override void Tick()
	{
		Super.Tick();
		
		if (runoutwarnings > 0)
		{
			runouttimer++;
		}
		
		if (isBlinking() && runoutwarnings == 0)
		{
			owner.A_StartSound("powerups/runninglow/haste", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			owner.A_Log ("$RUNOUT_HASTE", 1);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 1) {
			owner.A_StartSound("powerups/runninglow/haste", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 2) {
			owner.A_StartSound("powerups/runninglow/haste", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 3) {
			owner.A_StartSound("powerups/runninglow/haste", 999, CHANF_LOCAL|CHANF_UI, 0.5, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		}
	}
}	

// Invuln
class MetaInvulnerabilitySphere : PowerupGiver replaces InvulnerabilitySphere
{
	Default
	{
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.BIGPOWERUP
		+FLOATBOB
		scale 0.75;
		Inventory.MaxAmount 0;
		powerup.type "PowerMetaInvulnerable";
		//Powerup.Color InverseMap
		Powerup.Color "00 00 FF", 0.3; //1.0, 1.0, 0.3
		Inventory.PickupMessage "$GOTINVUL";
		Inventory.PickupSound "powerups/invuln";
		TeleFogSourceType "MetaItemFog";
		TeleFogDestType "MetaItemFog";
	}
	
	States
	{
	Spawn:
		PINV ABCDCB 6 Bright;
		Loop;
	}
}

class PowerMetaInvulnerable : PowerInvulnerable
{
	int runoutwarnings;
	int runouttimer;
	
	override void Tick()
	{
		Super.Tick();
		
		if (runoutwarnings > 0)
		{
			runouttimer++;
		}
		
		if (isBlinking() && runoutwarnings == 0)
		{
			owner.A_StartSound("powerups/runninglow/invuln", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			owner.A_Log ("$RUNOUT_INVULN", 1);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 1) {
			owner.A_StartSound("powerups/runninglow/invuln", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 2) {
			owner.A_StartSound("powerups/runninglow/invuln", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 3) {
			owner.A_StartSound("powerups/runninglow/invuln", 999, CHANF_LOCAL|CHANF_UI, 0.5, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		}
	}
}	

// Soulsphere
class MetaSoulsphere : Health replaces Soulsphere
{
	Default
	{
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.FANCYPICKUPSOUND
		+FLOATBOB
		scale 0.75;
		Inventory.Amount 100;
		Inventory.MaxAmount 200;
		Inventory.PickupMessage "$GOTSUPER";
		Inventory.PickupSound "items/soulsphere";
		TeleFogSourceType "MetaItemFog";
		TeleFogDestType "MetaItemFog";
	}
	
	States
	{
	Spawn:
		SOUL ABCDCB 6 Bright;
		Loop;
	}
}

// Megasphere
class MetaMegasphere : CustomInventory replaces Megasphere
{
	Default
	{
		+COUNTITEM
		+INVENTORY.ALWAYSPICKUP
		+FLOATBOB
		scale 0.75;
		Inventory.PickupMessage "$GOTMSPHERE";
		Inventory.PickupSound "items/megasphere";
		TeleFogSourceType "MetaItemFog";
		TeleFogDestType "MetaItemFog";
	}
	
	States
	{
	Spawn:
		MEGA ABCD 6 BRIGHT;
		Loop;
	Pickup:
		TNT1 A 0 A_GiveInventory("MetaBlueArmor", 1);
		TNT1 A 0 A_GiveInventory("MegasphereHealth", 1);
		Stop;
	}
}	

// Computer Map
class MetaAllmap : MapRevealer replaces Allmap
{
	Default
	{
		+COUNTITEM
		+INVENTORY.FANCYPICKUPSOUND
		+INVENTORY.ALWAYSPICKUP
		Inventory.MaxAmount 0;
		Inventory.PickupSound "items/automap";
		Inventory.PickupMessage "$GOTMAP";
		TeleFogSourceType "MetaItemFog";
		TeleFogDestType "MetaItemFog";
		scale 0.75;
	}
	
	States
	{
	Spawn:
		PMAP ABCDCB 3 Bright;
		Loop;
	}
}

// Quad Damage
class MetaQuadDamage : PowerupGiver
{
	Default
	{
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.BIGPOWERUP
		+FLOATBOB
		Inventory.MaxAmount 0;
		powerup.type "PowerMetaDamage";
		Powerup.Duration -60;
		damagefactor "normal", 4;
		damagefactor "SoulCube", 1;
		Powerup.Color "AF 00 FF", 0.3;
		scale 0.75;
		RenderStyle "Translucent";
		Inventory.PickupMessage "$GOTQUAD";
		Inventory.PickupSound "powerups/quad";
		TeleFogSourceType "MetaItemFog";
		TeleFogDestType "MetaItemFog";
		//$Category "Powerups/MetaDoom"
		//$Title "Quad Damage"
		//$NotAngled
		//$Color 9
	}
	
	States
	{
	Spawn:
		QUAD ABCDCB 6 Bright;
		Loop;
	}
}

class PowerMetaDamage : PowerDamage
{
	int runoutwarnings;
	int runouttimer;
	
	override void Tick()
	{
		Super.Tick();
		
		if (runoutwarnings > 0)
		{
			runouttimer++;
		}
		
		if (isBlinking() && runoutwarnings == 0)
		{
			owner.A_StartSound("powerups/runninglow/quad", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			owner.A_Log ("$RUNOUT_QUAD", 1);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 1) {
			owner.A_StartSound("powerups/runninglow/quad", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 2) {
			owner.A_StartSound("powerups/runninglow/quad", 999, CHANF_LOCAL|CHANF_UI, 1.0, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		} else if (runouttimer >= 35 && runoutwarnings == 3) {
			owner.A_StartSound("powerups/runninglow/quad", 999, CHANF_LOCAL|CHANF_UI, 0.5, ATTN_NONE, 1.0);
			runoutwarnings++;
			runouttimer = 0;
		}
	}
}	