/*
----------------------------
MetaDoom
Actor Definitions
The Unmaker
----------------------------
*/

class DemonKey : Counter { Default { Inventory.MaxAmount 3; } }

class MetaUnmakerPickup : WeaponGiver
{
	Default
	{
		DropItem "MetaUnmaker";
		Inventory.Pickupmessage "$GOTUNMAKER";
		Inventory.PickupSound "weapons/unmaker/get";
	}
	
	States
	{
	Spawn:
		UNMA Z 0;
		UNMA Z 0 { bDROPPED = 0; }
		UNMA Z -1;
		Stop;
	}
}

class MetaUnmaker : MetaDoomWeapon
{
	Default
	{
		Weapon.SelectionOrder 2900;
		Obituary "$OB_UNMAKER";
		Weapon.AmmoUse1 1;
		Weapon.AmmoGive1 40;
		Weapon.AmmoType1 "Cell";
		Weapon.AmmoUse2 10;
		Weapon.AmmoType2 "Cell";
		Inventory.Pickupmessage "$GOTUNMAKER";
		Inventory.PickupSound "weapons/unmaker/get";
		Tag "$TAGUNMAKER";
		Weapon.YAdjust 10;
		Weapon.UpSound "weapons/unmaker/use";
		//Decal Scorch;
		//$Category "Weapons/MetaDoom"
		//$Title "Unmaker"
		//$NotAngled
		//$Color 14
	}
	
	States
	{
	Ready:
		UNMA A 1 A_WeaponReady;
		"####" A 0 A_JumpIfInventory("MeleePunch", 1, "MeleePunch");
		Loop;
	Deselect:
		UNMA A 0 A_JumpIf(health <= 0, "DeadDude");
		UNMA A 0 A_PlaySound("weapons/swap");
	FinishDeselect:
		UNMA A 1 A_SmoothLower();
		Loop;
	Select:
		UNMA A 1 A_SmoothRaise();
		loop;
	Fire:
		UNMA A 0;
		UNMA A 0 A_JumpIfInventory("DemonKey", 3, "Fire_Keys3");
		UNMA A 0 A_JumpIfInventory("DemonKey", 2, "Fire_Keys2");
		UNMA A 0 A_JumpIfInventory("DemonKey", 1, "Fire_Keys1");
	Fire_Keys0:
		UNMA A 4;
		UNMA B 1 bright
		{
			A_FireProjectile("UnmakerTracer");
			A_PlaySound("weapons/unmaker/fire", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_AlertMonsters();
		}
		UNMA B 1 bright Offset(0,42);
		UNMA A 1 bright Offset(0,38);
		UNMA A 1 Offset(0,35);
		UNMA A 1 Offset(0,32);
		UNMA A 1;
		Goto Ready;
	Fire_Keys1:
		UNMA A 2;
		UNMA B 1 bright
		{
			A_FireProjectile("UnmakerTracer");
			A_PlaySound("weapons/unmaker/fire", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_AlertMonsters();
		}
		UNMA B 1 bright Offset(0,40);
		UNMA A 1 Offset(0,33);
		UNMA A 1 Offset(0,32);
		Goto Ready;
	Fire_Keys2:
		UNMA A 2;
		UNMA B 1 bright
		{
			A_FireProjectile("UnmakerTracer", -3);
			A_FireProjectile("UnmakerTracer", 3, 0);
			A_PlaySound("weapons/unmaker/fire", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_AlertMonsters();
		}
		UNMA B 1 bright Offset(0,40);
		UNMA A 1 Offset(0,33);
		UNMA A 1 Offset(0,32);
		Goto Ready;
	Fire_Keys3:
		UNMA A 2;
		UNMA B 1 bright
		{
			A_FireProjectile("UnmakerTracer", -4, 0);
			A_FireProjectile("UnmakerTracer", 4, 0);
			A_FireProjectile("UnmakerTracer");
			A_PlaySound("weapons/unmaker/fire", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_AlertMonsters();
		}
		UNMA B 1 bright Offset(0,40);
		UNMA A 1 Offset(0,33);
		UNMA A 1 Offset(0,32);
		Goto Ready;
	AltFire:
		UNMA A 0;
		UNMA A 0 A_JumpIfInventory("DemonKey", 1, "AltFire_Charge");
	AltFire_Keys0:
		UNMA A 1 Offset(0,34) A_PlaySound("weapons/unmaker/butan", CHAN_BODY);
		UNMA A 1 Offset(0,33);
		UNMA A 1 Offset(0,32);// A_TakeInventory("RLDetonator", 1);
		UNMA A 10;
		goto Ready;
	AltFire_Charge:
		UNMA A 0;
		UNMA A 0 A_PlaySound("weapons/unmaker/altcharge", CHAN_6);
		UNMA AAAAAAA 1 A_WeaponOffset(random(-1,1),random(31,33), WOF_INTERPOLATE);
		UNMA AAAAAAA 1 A_WeaponOffset(random(-2,2),random(30,34), WOF_INTERPOLATE);
		UNMA AAAAAAA 1 A_WeaponOffset(random(-4,4),random(27,37), WOF_INTERPOLATE);
		UNMA AAAAAAA 1 A_WeaponOffset(random(-4,4),random(20,40), WOF_INTERPOLATE);
		UNMA A 0 A_JumpIfInventory("DemonKey", 3, "AltFire_Keys3");
		UNMA A 0 A_JumpIfInventory("DemonKey", 2, "AltFire_Keys2");
		UNMA A 0 A_JumpIfInventory("DemonKey", 1, "AltFire_Keys1");
		goto AltFire_Keys0;
	AltFire_Keys1:
		UNMA A 0;
		UNMA B 1 bright
		{
			A_RailAttack((200),0,1,"Blue","White",RGF_SILENT|RGF_FULLBRIGHT,0,"UnmakerRailPuff",0,0,4096,35,4.0,0,"UnmakerRailCore");
			A_PlaySound("weapons/unmaker/altfire1", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_AlertMonsters();
		}
		UNMA B 1 bright Offset(0,42);
		UNMA A 1 bright Offset(0,38);
		UNMA A 1 Offset(0,35);
		UNMA A 1 Offset(0,32);
		UNMA A 1;
		Goto Ready;
	AltFire_Keys2:
		UNMA A 0;
		UNMA B 1 bright
		{
			A_RailAttack((200),0,1,"Blue","White",RGF_SILENT|RGF_FULLBRIGHT,0,"UnmakerRailPuff",4,4,4096,35,4.0,0,"UnmakerRailCore");
			A_RailAttack((200),0,1,"Blue","White",RGF_SILENT|RGF_FULLBRIGHT,0,"UnmakerRailPuff",4,4,4096,35,4.0,0,"UnmakerRailCore");
			A_PlaySound("weapons/unmaker/altfire2", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_AlertMonsters();
		}
		UNMA B 1 bright Offset(0,42);
		UNMA A 1 bright Offset(0,38);
		UNMA A 1 Offset(0,35);
		UNMA A 1 Offset(0,32);
		UNMA A 1;
		Goto Ready;
	AltFire_Keys3:
		UNMA A 0;
		UNMA B 1 bright
		{
			A_RailAttack((200),0,1,"Blue","White",RGF_SILENT|RGF_FULLBRIGHT,0,"UnmakerRailPuff",4,4,4096,35,4.0,0,"UnmakerRailCore");
			A_RailAttack((200),0,1,"Blue","White",RGF_SILENT|RGF_FULLBRIGHT,0,"UnmakerRailPuff",4,4,4096,35,4.0,0,"UnmakerRailCore");
			A_RailAttack((200),0,1,"Blue","White",RGF_SILENT|RGF_FULLBRIGHT,0,"UnmakerRailPuff",4,4,4096,35,4.0,0,"UnmakerRailCore");
			A_PlaySound("weapons/unmaker/altfire3", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_AlertMonsters();
		}
		UNMA B 1 bright Offset(0,42);
		UNMA A 1 bright Offset(0,38);
		UNMA A 1 Offset(0,35);
		UNMA A 1 Offset(0,32);
		UNMA A 1;
		Goto Ready;
	Flash:
		TNT1 A 4 Bright A_Light1;
		Goto LightDone;
		TNT1 A 4 Bright A_Light1;
		Goto LightDone;
 	Spawn:
		UNMA Z -1;
		Stop;
	}
}

// Level 1
class UnmakerTracer : FastProjectile
{
	Default
	{
		Alpha 1;
		RenderStyle "Add";
		Radius 2;
		Height 2;
		damage 7;
		Speed 75;
		PROJECTILE;
		+BLOODSPLATTER
		+NOEXTREMEDEATH
		Scale 1;
		MissileType "UnmakerTracerTrail";
		MissileHeight 8;
		Decal "BulletChip";
		Obituary "$OB_UNMAKER";
	}
	
	States
	{
	Spawn:
		LASS AB 1 BRIGHT;
		Loop;
	Death:
	Crash:
		PUFF A 0 A_PlaySound("weapons/pistol/hitwall", CHAN_BODY, frandom(0.5,1.0));
		PUFF A 2 BRIGHT A_SpawnDebris("UnmakerTracerSpark");
		PUFF B 2 BRIGHT A_SetTranslucent(0.9,0);
		PUFF CD 2 BRIGHT;
		Stop;
	XDeath:
		TNT1 A 3 A_PlaySound("weapons/pistol/hit");
		Stop;
	}
}

class UnmakerTracerTrail : Actor
{ 
	Default
	{
		Alpha 1;
		RenderStyle "Add";
		Speed 0;
		+NOBLOCKMAP
		+NOGRAVITY
		+NOTELEPORT
		+CANNOTPUSH
		+NODAMAGETHRUST
		+DONTSPLASH
		Scale 0.75;
	}
	
	States
	{
	Spawn:
		LASS AB 1 BRIGHT A_FadeOut(0.1);
		Loop;
	}
}

class UnmakerTracerSpark : Actor
{
	Default
	{
		Health 4;
		radius 3;
		height 6;
		speed .1;
		RenderStyle "Add";
		Alpha 1;
		Scale 0.5;
		Mass 0;
		translation "224:224=176:176", "192:197=180:191";
		+missile
		+doombounce
		+FLOORCLIP
		+DONTSPLASH
		+NOTELEPORT
	}
	
	States
	{
		PLSE E 1;
		PLSE EEEEE 1  Bright A_SetTranslucent(.8,1);
		PLSE EEEEEE 1  Bright A_SetTranslucent(.6,1);
		PLSE EEEEEEEE 1  Bright A_SetTranslucent(.4,1);
		PLSE EEEEEEEEEE 1 Bright A_SetTranslucent(.2,1);
		Stop;
	}
}

// Demon Keys
class DemonKeySpawner : Actor
{
	Default
	{
		radius 64;
		height 32;
	}
	
	mixin LootSpawn;
	
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Jump(256, "Loot1", "Loot2", "Loot3");
		stop;
	Loot1:
		TNT1 A 0 A_SpawnLoot("DemonKeyPickup1");
		stop;
	Loot2:
		TNT1 A 0 A_SpawnLoot("DemonKeyPickup2");
		stop;
	Loot3:
		TNT1 A 0 A_SpawnLoot("DemonKeyPickup3");
		stop;
	}
}

class DemonKeyPickup1 : CustomInventory
{
	Default
	{
		inventory.pickupmessage "$GOTARTIFACT1";
		inventory.pickupsound "weapons/unmaker/demonkey";
		+INVENTORY.ALWAYSPICKUP
		+FLOATBOB
		+BLOCKASPLAYER
	}
	
	states
	{
	Spawn:
		ART1 ABCDE 3 bright;
		loop;
	Pickup:
		TNT1 A 0 A_GiveInventory("DemonKey", 1);
		stop;
	}
}

class DemonKeyPickup2 : DemonKeyPickup1
{
	Default
	{
		inventory.pickupmessage "$GOTARTIFACT2";
	}
	
	states
	{
	Spawn:
		ART2 ABCDE 3 bright;
		loop;
	}
}

class DemonKeyPickup3 : DemonKeyPickup1
{
	Default
	{
		inventory.pickupmessage "$GOTARTIFACT3";
	}
	
	states
	{
	Spawn:
		ART3 ABCDE 3 bright;
		loop;
	}
}

class UnmakerRailCore : Actor
{
	Default
	{
		+NOINTERACTION
		renderstyle "Add";
	}
	
	States
	{
	Spawn:
		HRSH A 0;
		HRSH A 1 A_FadeOut(0.05);
		wait;
	}
}

class UnmakerRailPuff : MetaExplosion
{
	Default
	{
		scale 2;
		Obituary "$OB_GAUSS";
		+ALWAYSPUFF
		+FORCEDECAL
		Decal "Scorch";
	}
	
	States
	{
		Spawn:
		PLSE B 0 bright;
		PLSE B 0 BRIGHT
		{
			A_Quake (3,5,0,750,0);
			A_SpawnItem("UnmakerRailPuffShockwave");
		}
		PLSE C 0 BRIGHT;
		Stop;
	}
}

class UnmakerRailPuffShockwave : Actor
{
	Default
	{
		+WALLSPRITE
		+NOGRAVITY
		+NOBLOCKMAP
		+NOCLIP
		scale 0.5;
		Renderstyle "add";
	}
	
	states
	{
		Spawn:
		SHOK C 0;
		SHOK C 0;
		DoTheThing:
		SHOK C 1
		{
			A_FadeOut(0.05);
			A_SetScale(scale.X + 0.05);
		}
		loop;
	}
}