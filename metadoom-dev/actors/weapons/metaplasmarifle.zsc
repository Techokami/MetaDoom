/*
----------------------------
MetaDoom
Actor Definitions
Plasma Rifle
----------------------------
*/

class MetaPlasmaRiflePickup : WeaponGiver
{
	Default
	{
		DropItem "MetaPlasmaRifle";
		Inventory.PickupMessage "$GOTPLASMA";
		Inventory.PickupSound "weapons/plasmarifle/get";
	}
	
	States
	{
	Spawn:
		PLA0 Z 0;
		PLA0 Z 0 { bDROPPED = 0; }
		PLA0 Z -1;
		Stop;
	}
}

class MetaPlasmaRifle : MetaDoomWeapon
{
	Default
	{
		Weapon.SelectionOrder 100;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 40;
		Weapon.AmmoType "Cell";
		Inventory.PickupMessage "$GOTPLASMA";
		Tag "$TAG_PLASMARIFLE";
		Inventory.PickupSound "weapons/plasmarifle/get";
		+WEAPON.NOALERT;
		Weapon.UpSound "weapons/plasmarifle/use";
		//$Category "Weapons/MetaDoom"
		//$Title "Plasma Rifle"
		//$NotAngled
		//$Color 14
	}
	
	int shotsfired;
	int heatlevel;
	
	States
	{
	Ready:
		PLA0 A 1 A_WeaponReady;
		PLA0 A 0 A_JumpIfInventory("MeleePunch", 1, "MeleePunch");
		loop;
	Deselect:
		PLA0 A 0 A_JumpIf(health <= 0, "DeadDude");
		PLA0 A 0 A_PlaySound("weapons/swap");
	FinishDeselect:
		PLA0 A 1 A_SmoothLower();
		Loop;
	Select:
		PLA0 A 0
		{
			A_Overlay(2, "Overlay.Manager");
		}
	FinishSelect:
		PLA0 A 1 A_SmoothRaise();
		loop;
	Fire:
		PLA0 B 1 bright Offset(0,37)
		{
			A_PlaySound("weapons/plasmarifle/fire", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_FireProjectile("MetaPlasmaBall");
			
			// gimme heat!
			if (invoker.heatlevel < 5)
			{
				invoker.shotsfired++;
			}
			
			if (invoker.shotsfired >= 10)
			{
				invoker.shotsfired = 0;
				invoker.heatlevel++;
				
				switch(invoker.heatlevel)
				{
				  case 5: A_StartSound("weapons/plasmarifle/hot", 17, CHANF_LOCAL, 1.0, ATTN_NONE, 1.0); break;
				  case 4: A_StartSound("weapons/plasmarifle/warmup", 17, CHANF_LOCAL, 1.0, ATTN_NONE, 1.75); break;
				  case 3: A_StartSound("weapons/plasmarifle/warmup", 17, CHANF_LOCAL, 1.0, ATTN_NONE, 1.5); break;
				  case 2: A_StartSound("weapons/plasmarifle/warmup", 17, CHANF_LOCAL, 1.0, ATTN_NONE, 1.25); break;
				  case 1: 
				  default: A_StartSound("weapons/plasmarifle/warmup", 17, CHANF_LOCAL, 1.0, ATTN_NONE, 1.0); break;
				}
			}
			
			A_AlertMonsters();
		}
		PLA0 B 1 bright Offset(0,35);
		PLA0 B 1 bright Offset(0,34);
		PLA0 C 1 bright Offset(0,33);
		PLA0 C 1 bright Offset(0,32);
		PLA0 A 0 A_ReFire;
		goto Ready;
	Flash:
		TNT1 A 4 Bright A_Light1;
		Goto LightDone;
		TNT1 B 4 Bright A_Light1;
		Goto LightDone;
	AltFire:
		PLA0 A 0;
		PLA0 A 0 A_JumpIf(invoker.heatlevel >=  5,"AltBlast");
		PLA0 A 1 Offset(0,34) A_PlaySound("weapons/plasmarifle/dry", CHAN_BODY);
		PLA0 A 1 Offset(0,33);
		PLA0 A 1 Offset(0,32);
		PLA0 A 8;
		goto Ready;
	AltBlast:
		PLA0 B 1 bright Offset(0,37)
		{
			A_PlaySound("weapons/plasmarifle/pop", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			
			for (int i = 0; i < 22; i ++)
			{
				A_FireProjectile("MetaPlasmaPop", (16 * i), 0, 0, 0, FPF_NOAUTOAIM);
			}
			
			invoker.shotsfired = 0;
			invoker.heatlevel = 0;
			A_AlertMonsters();
		}
		PLA0 B 1 bright Offset(0,35);
		PLA0 B 1 bright Offset(0,35);
		PLA0 C 1 bright Offset(0,34);
		PLA0 C 1 bright Offset(0,33);
		PLA0 C 1 bright Offset(0,32);
		PLA0 A 10;
		goto Ready;
	Spawn:
		PLA0 Z -1;
		Stop;
	
	Overlay.Manager:
		PLAM A 0
		{
			// thanks to 3saster for teaching me what a switch statement is		
			switch(invoker.heatlevel)
			{
			  case 5: A_Overlay(2, "Overlay.Display5"); break;
			  case 4: A_Overlay(2, "Overlay.Display4"); break;
			  case 3: A_Overlay(2, "Overlay.Display3"); break;
			  case 2: A_Overlay(2, "Overlay.Display2"); break;
			  case 1: A_Overlay(2, "Overlay.Display1"); break;
			  case 0: 
			  default: A_Overlay(2, "Overlay.Display0"); break;
			}
		}
		loop;
		
	Overlay.Display0:
		PLAM A 1 bright;
		PLAM A 0 A_Overlay(2, "Overlay.Manager");
		loop;
	Overlay.Display1:
		PLAM B 1 bright;
		PLAM A 0 A_Overlay(2, "Overlay.Manager");
		loop;
	Overlay.Display2:
		PLAM C 1 bright;
		PLAM A 0 A_Overlay(2, "Overlay.Manager");
		loop;
	Overlay.Display3:
		PLAM D 1 bright;
		PLAM A 0 A_Overlay(2, "Overlay.Manager");
		loop;
	Overlay.Display4:
		PLAM E 1 bright;
		PLAM A 0 A_Overlay(2, "Overlay.Manager");
		loop;
	Overlay.Display5:
		PLAM F 1 bright;
		PLAM A 0 A_Overlay(2, "Overlay.Manager");
		loop;
	}
}

class MetaPlasmaBall : Actor
{
	Default
	{
		Radius 13;
		Height 8;
		Speed 25;
		Damage 5;
		Projectile;
		+RANDOMIZE
		RenderStyle "Add";
		Alpha 0.75;
		Obituary "$OB_MPPLASMARIFLE";
		Decal "PlasmaScorch";
	}
	
	States
	{
	Spawn:
		PLSS A 0 A_PlaySound ("weapons/plasmarifle/loop", CHAN_BODY, 1.0, 1);
		PLSS AB 6 Bright;
		Loop;
	Death:
		PLSE A 0 A_PlaySound("weapons/plasmarifle/hit");
		PLSE ABCDE 4 Bright;
		Stop;
	}
}

class MetaPlasmaPop : Actor
{
	Default
	{
		Radius 13;
		Height 8;
		Speed 45;
		Damage 20;
		Projectile;
		+RANDOMIZE
		RenderStyle "Add";
		Alpha 0.75;
		Obituary "$OB_MPPLASMARIFLE";
		Decal "PlasmaScorch";
	}
	
	States
	{
	Spawn:
		PLSS A 0 A_PlaySound ("weapons/plasmarifle/loop", CHAN_BODY, 1.0, 1);
		PLSE BC 2 Bright A_SpawnItem("MetaPlasmaPopTrail");
		Loop;
	Death:
		PLSE A 0 A_PlaySound("weapons/plasmarifle/hit");
		PLSE A 0 A_Quake (1,3,0,750,0);
		PLSE A 0 A_Explode(64,128,0);
		PLSE ABCDE 4 Bright;
		Stop;
	}
}

class MetaPlasmaPopTrail : Actor
{
	Default
	{
		+NOBLOCKMAP;
		+NOGRAVITY;
		RenderStyle "Add";
		Alpha 0.75;
	}
	
	states
	{
	Spawn:
		PLSE ABCDE 2 Bright;
		Stop;
	}
}