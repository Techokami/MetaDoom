/*
----------------------------
MetaDoom
Actor Definitions
Gauss Cannon
----------------------------
*/

class GaussScope : _Boolean {}

class MetaGaussCannonPickup : WeaponGiver
{
	Default
	{
		DropItem "MetaGaussCannon";
		Inventory.PickupMessage "$GOTGAUSS";
		Inventory.PickupSound "weapons/gauss/get";
	}
	
	States
	{
	Spawn:
		GAUS Z 0;
		GAUS Z 0 { bDROPPED = 0; }
		GAUS Z -1;
		Stop;
	}
}

class MetaGaussCannon : MetaDoomWeapon
{
	Default
	{
		Weapon.SelectionOrder 400;
		Weapon.AmmoUse1 10;
		Weapon.AmmoGive 40;
		Weapon.AmmoType "Cell";
		Inventory.PickupMessage "$GOTGAUSS";
		Obituary "$OB_GAUSS";
		Tag "$TAGGAUSS";
		Inventory.PickupSound "weapons/gauss/get";
		//Decal PlasmaScorch
		damagetype "Gauss";
		Weapon.UpSound "weapons/gauss/use";
		//$Category "Weapons/MetaDoom"
		//$Title "Gauss Cannon"
		//$NotAngled
		//$Color 14
	}
	
	States
	{
	Ready:
		GAUS A 0;
		GAUS A 0 A_JumpIfInventory("GaussScope",1,"AltfireReady");
		GAUS ABC 1
		{
			A_WeaponReady();
			return A_JumpIfInventory("MeleePunch", 1, "MeleePunch");
		}
		Loop;
	AltfireReady:
		GAUS Y 1 A_WeaponReady(WRF_NOBOB);
		Loop;
	Deselect:
		GAUS A 0;
		GAUS A 0 A_JumpIf(health <= 0, "DeadDude");
		GAUS A 0 A_JumpIfInventory("GaussScope",1,"AltfireDeselect");
		GAUS A 0 A_PlaySound("weapons/swap");
	FinishDeselect:
		GAUS ABC 1 A_SmoothLower();
		Loop;
	Select:
		GAUS ABC 1 A_SmoothRaise();
		loop;
	Fire:
		GAUS A 0;
		GAUS A 0 A_JumpIfInventory("GaussScope",1,"AltfireFire");
		GAUS A 3;
		GAUS D 1 bright
		{
			A_RailAttack((200),0,1,"Blue","White",RGF_SILENT|RGF_FULLBRIGHT|RGF_NOPIERCING,0,"GaussExplosion");
			A_PlaySound ("weapons/gauss/fire", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_Quake (3,5,0,750,0);
		}
		GAUS D 1 bright Offset(0,45) A_SetPitch(pitch-2);
		GAUS E 1 bright Offset(0,48) A_SetPitch(pitch-2);
		GAUS E 2 bright Offset(0,48);
		GAUS F 1 bright Offset(0,46) A_SetPitch(pitch+1);
		GAUS F 1 bright Offset(0,44) A_SetPitch(pitch+1);
		GAUS G 1 Offset(0,42) A_SetPitch(pitch+1);
		GAUS G 1 Offset(0,38) A_SetPitch(pitch+1);
		GAUS A 1 Offset(0,36);
		GAUS B 1 Offset(0,34);
		GAUS C 1 Offset(0,33);
		GAUS A 1 Offset(0,32);
		GAUS BCABCABCABCABC 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOPRIMARY);
		Goto Ready;
	Flash:
		TNT1 I 4 Bright A_Light1;
		TNT1 J 3 Bright A_Light2;
		Goto LightDone;
	Spawn:
		GAUS Z -1;
		Stop;
		
	Altfire:
		MACG E 0 A_JumpIfInventory("GaussScope",1,"AltfireEnd");
	AltfireStart:
		GAUS Y 0 A_PlaySound("weapons/gauss/zoomin");
		GAUS Y 2 A_ZoomFactor(3.0);
		GAUS Y 0 A_GiveInventory("GaussScope", 1);
		GAUS Y 10;
		goto Ready;
	AltfireEnd:
		GAUS Y 0 A_PlaySound("weapons/gauss/zoomout");
		GAUS Y 2 A_ZoomFactor(1.0);
		GAUS Y 0 A_TakeInventory("GaussScope", 999);
		GAUS Y 10;
		Goto Ready;
	AltfireDeselect:
		GAUS Y 0 A_PlaySound("weapons/gauss/zoomout");
		GAUS Y 2 A_ZoomFactor(1.0);
		GAUS Y 0 A_TakeInventory("GaussScope", 999);
		GAUS Y 0;
		Goto Deselect;
	AltfireFire:
		GAUS Y 3;
		GAUS Y 1 bright
		{
			A_RailAttack((200),0,1,"Blue","White",RGF_SILENT|RGF_FULLBRIGHT|RGF_NOPIERCING,0,"GaussExplosion");
			A_PlaySound ("weapons/gauss/fire", CHAN_WEAPON);
			A_GunFlash();
			A_Quake (3,5,0,750,0);
		}
		GAUS Y 1 bright A_SetPitch(pitch-2);
		GAUS Y 1 bright A_SetPitch(pitch-2);
		GAUS Y 2 bright;
		GAUS Y 1 bright A_SetPitch(pitch+1);
		GAUS Y 1 bright A_SetPitch(pitch+1);
		GAUS Y 1 A_SetPitch(pitch+1);
		GAUS Y 1 A_SetPitch(pitch+1) ;
		GAUS Y 19 A_WeaponReady(WRF_NOSWITCH|WRF_NOPRIMARY|WRF_NOBOB);
		Goto Ready;
	}
}

class GaussExplosion : MetaExplosion
{
	Default
	{
		scale 2;
		Obituary "$OB_GAUSS";
		+ALWAYSPUFF
		+FORCEDECAL
		Decal "PlasmaScorch";
		damagetype "Gauss";
		
		+ALLOWTHRUFLAGS
		+THRUSPECIES
		Species "NoHitScan";
	}
	
	States
	{
		Spawn:
		PLSE B 0 bright;
		PLSE B 4 BRIGHT
		{
			A_PlaySound("inventory/teslarocket/explode", CHAN_WEAPON);
			A_Explode((20),128);
			A_Quake (3,5,0,750,0);
			A_SpawnItem("ShockwaveSmall");
		}
		PLSE C 3 BRIGHT;
		PLSE D 2 BRIGHT;
		Stop;
	}
}