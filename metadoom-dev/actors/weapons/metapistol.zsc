/*
----------------------------
MetaDoom
Actor Definitions
Pistol
----------------------------
*/

class PistolFlashlight: _Boolean {}
class PistolAmmoCoupon: _Boolean {}

class MetaPistolPickup : WeaponGiver
{
	Default
	{
		DropItem "MetaPistol";
		Inventory.Pickupmessage "$GOTPISTOL";
		Inventory.PickupSound "weapons/pistol/get";
	}
	States
	{
	Spawn:
		PIST Z 0;
		PIST Z 0 { bDROPPED = 0; }
		PIST Z -1;
		Stop;
	}
}

class MetaPistol : MetaDoomWeapon
{
	Default
	{
		Weapon.SelectionOrder 1900;
		Obituary "$OB_METAPISTOL";
		+WEAPON.WIMPY_WEAPON
		Inventory.Pickupmessage "$GOTPISTOL";
		Inventory.PickupSound "weapons/pistol/get";
		Tag "$TAGPISTOL";
		+INVENTORY.ALWAYSPICKUP
		+WEAPON.NOALERT
		+INVENTORY.UNTOSSABLE
		Weapon.UpSound "weapons/pistol/use";
	}
	
	States
	{
	Ready:
		PIST A 1 A_WeaponReady;
		"####" A 0 A_JumpIfInventory("MeleePunch", 1, "MeleePunch");
		Loop;
	Deselect:
		PIST A 0;
		PIST A 0
		{
			if (CountInv("PistolFlashlight") == 1)
			{
				A_TakeInventory("PistolFlashlight", 1);
				A_RemoveChildren(1,RMVF_EVERYTHING,"BF_CoolFlashlight");
				A_PlaySound("weapons/flashlight/off", CHAN_BODY);
			}
		}
		PIST A 0 A_JumpIf(health <= 0, "DeadDude");
		PIST A 0
		{			
			A_PlaySound("weapons/swap");
			
			if (CountInv("PistolFlashlight") == 1)
			{
				A_TakeInventory("PistolFlashlight", 1);
			}			
		}
	FinishDeselect:
		PIST A 1 A_SmoothLower();
		Loop;
	Select:
		PIST A 1 A_SmoothRaise();
		loop;
	Fire:
		PIST A 0		
		{
			if (meta_pistolammo && CountInv("Clip") == 0)
			{
				return ResolveState("NoAmmo");
			}
			
			return ResolveState(null); // this is dumb. why do i need this?
		}
		PIST A 4;
		PIST B 2 bright
		{
			if (!meta_pistolammo || (meta_pistolammo && CountInv("Clip") > 0))
			{
				A_FireProjectile("PistolTracer");
				
				if (meta_pistolammo)
				{
					A_TakeInventory("Clip", 1);
				}
				A_PlaySound("weapons/pistol/fire", CHAN_WEAPON);
				
				if (CountInv("PowerDamage") > 0)
				{
					A_PlaySound("powerups/quad/use", CHAN_5);
				}
				
				A_GunFlash();
				A_AlertMonsters();
				
				A_Overlay(2, "Overlay.Recoil");
			}
		}
		PIST C 2 bright A_JumpIfInventory("MeleePunch", 1, "MeleePunch");
		PIST D 2 bright A_JumpIfInventory("MeleePunch", 1, "MeleePunch");
		PIST E 2 A_JumpIfInventory("MeleePunch", 1, "MeleePunch");
		PIST F 2 A_JumpIfInventory("MeleePunch", 1, "MeleePunch");
		Goto Ready;
	NoAmmo:
		PIST A 0;
		PIST A 1 Offset(0,34) A_PlaySound("weapons/pistol/dry", CHAN_BODY);
		PIST A 1 Offset(0,33);
		PIST A 1 Offset(0,32);
		PIST A 10;
		goto Ready;
	AltFire:
		PIST A 0;
		PIST A 10
		{
			if (CountInv("PistolFlashlight") == 0)
			{
				A_GiveInventory("PistolFlashlight", 1);
				A_SpawnItemEx("BF_CoolFlashlight",0,0,32,0,0,0,0,SXF_SETMASTER);
				A_PlaySound("weapons/flashlight/on", CHAN_BODY);
			} else {
				A_TakeInventory("PistolFlashlight", 1);
				A_RemoveChildren(1,RMVF_EVERYTHING,"BF_CoolFlashlight");
				A_PlaySound("weapons/flashlight/off", CHAN_BODY);
			}
			
			A_Overlay(14, "Overlay.GenericButtonPress");
		}
		goto Ready;
	Flash:
		TNT1 A 4 Bright A_Light1;
		Goto LightDone;
		TNT1 A 4 Bright A_Light1;
		Goto LightDone;
 	Spawn:
		PIST Z -1;
		Stop;
		
	Overlay.Recoil:
		TNT1 B 1 A_WeaponOffset(0,38,WOF_INTERPOLATE);
		TNT1 C 1 A_WeaponOffset(0,42,WOF_INTERPOLATE);
		TNT1 C 1 A_WeaponOffset(0,43,WOF_INTERPOLATE);
		TNT1 D 1 A_WeaponOffset(0,38,WOF_INTERPOLATE);
		TNT1 D 1 A_WeaponOffset(0,35,WOF_INTERPOLATE);
		TNT1 E 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		TNT1 E 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		TNT1 A -1;
		stop;
	}
}

class PistolTracer : FastProjectile
{
	Default
	{
		Alpha 0.90;
		RenderStyle "Add";
		Radius 2;
		Height 2;
		damage 5;
		Speed 75;
		PROJECTILE;
		+BLOODSPLATTER
		+NOEXTREMEDEATH
		Scale 0.4;
		MissileType "PistolTracerTrail";
		MissileHeight 8;
		//Decal "BulletChip";
		Obituary "$OB_METAPISTOL";
	}
	
	States
	{
	Spawn:
		PISP A 1 BRIGHT;
		Loop;
	Death:
	Crash:
		PUFF A 0 
		{
			A_PlaySound("weapons/pistol/hitwall", CHAN_BODY, frandom(0.5,1.0));
			
			// GROSS hack to activate hitscan impact triggers
			A_CustomBulletAttack (0, 0, 1, 0, "Actor", 4, CBAF_AIMFACING|CBAF_NOPITCH|CBAF_NORANDOM, AAPTR_TARGET, null, 0, 0);
			A_SprayDecal("BulletChip",4);
		}
		PUFF A 2 BRIGHT A_SpawnDebris("PistolTracerSpark");
		PUFF B 2 BRIGHT A_SetTranslucent(0.9,0);
		PUFF CD 2 BRIGHT;
		Stop;
	XDeath:
		TNT1 A 3 A_PlaySound("weapons/pistol/hit");
		Stop;
	}
}

class PistolTracerTrail : Actor
{ 
	Default
	{
		Alpha 0.75;
		RenderStyle "Add";
		Speed 0;
		+NOBLOCKMAP
		+NOGRAVITY
		+NOTELEPORT
		+CANNOTPUSH
		+NODAMAGETHRUST
		+DONTSPLASH
		Scale 0.4;
	}
	States
	{
	Spawn:
		PISP A 1 BRIGHT A_FadeOut(0.3);
		Loop;
	}
}

class PistolTracerSpark : Actor
{
	Default
	{
		Health 4;
		radius 3;
		height 6;
		speed .1;
		RenderStyle "Add";
		Alpha 1;
		Scale 0.5;
		Mass 0;
		+missile
		+doombounce
		+FLOORCLIP
		+DONTSPLASH
		+NOTELEPORT
	}
	States
	{
		PISP A 1;
		PISP AAAAA 1  Bright A_SetTranslucent(.8,1);
		PISP AAAAAA 1  Bright A_SetTranslucent(.6,1);
		PISP AAAAAAAA 1  Bright A_SetTranslucent(.4,1);
		PISP AAAAAAAAAA 1 Bright A_SetTranslucent(.2,1);
		Stop;
	}
	
	override bool CanCollideWith(Actor other, bool passive)
	{
		return false;
	}
}

// Based on "FlashlightInterpBug.pk3" by DrPySpy
Class BF_CoolFlashlight : Spotlight
{
	Default
	{
		-NOGRAVITY
		-INVISIBLE
		RenderRadius 512;
	}
    
	override void Tick()
	{
		args[0] = 255;
        args[1] = 255;
        args[2] = 255;    
        args[3] = 200;
		SpotInnerAngle = 16;        
        SpotOuterAngle = 20;
		
        A_Warp(AAPTR_MASTER,0,0,32,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_COPYPITCH);
		Super.Tick();  
	}
	
	States
	{
		Spawn:
			TNT1 A -1;
			Stop;
	}
}