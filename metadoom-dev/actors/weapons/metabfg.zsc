/*
----------------------------
MetaDoom
Actor Definitions
BFG 9000
----------------------------
*/

Class MetaBFG9000Pickup : WeaponGiver
{
	Default
	{
		DropItem "MetaBFG9000";
		Inventory.PickupMessage "$GOTBFG9000";
		Inventory.PickupSound "weapons/bfg/get";
	}
	States
	{
	Spawn:
		MBFG Z 0;
		MBFG Z 0 { bDROPPED = false; }
		MBFG Z -1;
		Stop;
	}
}

Class MetaBFG9000 : MetaDoomWeapon
{
	Default
	{
		Height 20;
		Weapon.SelectionOrder 2800;
		Weapon.AmmoUse1 1;
		Weapon.AmmoUse2 1;
		Weapon.AmmoGive 3;
		Weapon.AmmoType1 "BFGAmmo";
		Weapon.AmmoType2 "BFGAmmo";
		+WEAPON.NOAUTOFIRE;
		Inventory.PickupMessage "$GOTBFG9000";
		Tag "$TAG_BFG9000";
		Inventory.PickupSound "weapons/bfg/get";
		Weapon.BobRangeX 0.5;
		Weapon.BobRangey 0.25;
		Weapon.UpSound "weapons/bfg/use";
		//$Category "Weapons/MetaDoom"
		//$Title "BFG9000"
		//$NotAngled
		//$Color 14
	}
	States
	{
	Ready:
		MBFG A 1 A_WeaponReady;
		"####" A 0 A_JumpIfInventory("MeleePunch", 1, "MeleePunch");
		MBFG B 1 A_WeaponReady;
		"####" A 0 A_JumpIfInventory("MeleePunch", 1, "MeleePunch");
		Loop;
	Deselect:
		MBFG A 0 A_JumpIf(health <= 0, "DeadDude");
		MBFG A 0 A_PlaySound("weapons/swap");
	FinishDeselect:
		MBFG AB 1 A_SmoothLower();
		Loop;
	Select:
		MBFG AB 1 A_SmoothRaise();
		loop;
	Fire:
		MBFG A 1 
		{
			A_PlaySound("weapons/bfg/charge");
			A_Overlay(14, "Overlay.ChargeUp");
		}
		MBFG BABABABABABABABABABABABABABA 1;
		MBFG C 2 BRIGHT
		{
			A_FireProjectile("MetaBFGBall");
			A_PlaySound ("weapons/bfg/fire1", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_Quake (8,10,0,750,0);
			A_Overlay(14, "Overlay.Primary");
		}
		MBFG D 2 bright;
		MBFG E 2 bright;
		MBFG FGH 2;
		MBFG ABABABABAB 1;
		Goto Ready;
	AltFire:
		MBFG A 1 
		{
			A_PlaySound("weapons/bfg/charge");
			A_Overlay(14, "Overlay.ChargeUp");
		}
		MBFG BABABABABABABABABABABABABABA 1;
		MBFG C 0 bright
		{
			A_PlaySound ("weapons/bfg/fire2", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_Quake (8,10,0,750,0);
			A_TakeInventory("BFGAmmo",1);
		}
		MBFG CDCDCDCDCDCDCDCDCDCDCDCDCD 1 bright
		{
			A_FireProjectile("MetaBFGAltfire",random(-8,8),0,0,0,FPF_NOAUTOAIM,random(-8,8));
			A_ZoomFactor(frandom(0.8,0.85), ZOOM_NOSCALETURNING);
		}
		MBFG C 0 bright A_Overlay(14, "Overlay.Alternate");
		MBFG C 1 bright;
		MBFG DE 2 bright;
		MBFG FGH 2;
		MBFG ABABABABAB 1;
		Goto Ready;
	Flash:
		TNT1 A 11 Bright A_Light1;
		TNT1 B 6 Bright A_Light2;
		Goto LightDone;
	Spawn:
		MBFG Z -1;
		Stop;
		
	Overlay.ChargeUp:
		TNT1 A 1 A_WeaponOffset(1,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-1,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(1,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-2,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(2,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-2,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(3,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-3,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(3,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-3,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(3,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-3,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(4,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-4,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(4,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-4,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(4,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-4,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(4,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-4,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(6,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-6,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(6,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-6,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(6,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-6,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(6,32,WOF_INTERPOLATE);
		TNT1 B 1 A_WeaponOffset(-6,32,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		TNT1 A -1;
		stop;
		
	Overlay.Primary:
		TNT1 A 1 A_ZoomFactor(0.6, ZOOM_INSTANT|ZOOM_NOSCALETURNING);
		TNT1 C 1 { A_WeaponOffset(0,45,WOF_INTERPOLATE); A_SetPitch(pitch-4, SPF_INTERPOLATE); }
		TNT1 D 1 { A_WeaponOffset(0,48,WOF_INTERPOLATE); A_SetPitch(pitch-4, SPF_INTERPOLATE); }
		TNT1 D 1 { A_WeaponOffset(0,48,WOF_INTERPOLATE); A_ZoomFactor(1.0, ZOOM_NOSCALETURNING); }
		TNT1 E 1 { A_WeaponOffset(0,46,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 E 1 { A_WeaponOffset(0,44,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 F 1 { A_WeaponOffset(0,42,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 F 1 { A_WeaponOffset(0,38,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 G 1 { A_WeaponOffset(0,36,WOF_INTERPOLATE); A_SetPitch(pitch+2, SPF_INTERPOLATE); }
		TNT1 G 1 { A_WeaponOffset(0,34,WOF_INTERPOLATE); A_SetPitch(pitch+2, SPF_INTERPOLATE); }
		TNT1 H 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		TNT1 H 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		TNT1 A -1;
		stop;
		
	Overlay.Alternate:
		TNT1 C 1 { A_WeaponOffset(0,45,WOF_INTERPOLATE); A_SetPitch(pitch-4, SPF_INTERPOLATE); }
		TNT1 D 1 { A_WeaponOffset(0,48,WOF_INTERPOLATE); A_SetPitch(pitch-4, SPF_INTERPOLATE); }
		TNT1 D 1 { A_WeaponOffset(0,48,WOF_INTERPOLATE); A_ZoomFactor(1.0, ZOOM_NOSCALETURNING); }
		TNT1 E 1 { A_WeaponOffset(0,46,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 E 1 { A_WeaponOffset(0,44,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 F 1 { A_WeaponOffset(0,42,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 F 1 { A_WeaponOffset(0,38,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 G 1 { A_WeaponOffset(0,36,WOF_INTERPOLATE); A_SetPitch(pitch+2, SPF_INTERPOLATE); }
		TNT1 G 1 { A_WeaponOffset(0,34,WOF_INTERPOLATE); A_SetPitch(pitch+2, SPF_INTERPOLATE); }
		TNT1 H 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		TNT1 H 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		TNT1 A -1;
		stop;
	}
}

// bfg zapper stuff from argent from xaser, cheers dogg
Class MetaBFGBall : Actor
{
	Default
	{
		Radius 13;
		Height 8;
		Speed 10;
		Damage 100;
		Projectile;
		+RANDOMIZE;
		RenderStyle "Add";
		Alpha 0.75;
		Obituary "$OB_MPBFG_BOOM";
		Decal "BFGLightning";
	}
	States
	{
	Spawn:
		BFS1 A 0;
		BFS1 A 0 A_PlaySound ("weapons/bfg/fly", CHAN_BODY, 1.0, 1);
		BFS1 AAAABBBB 1 Bright 
		{
			A_SetScale(frandom(0.8,1.2),frandom(0.8,1.2));
			A_SpawnItemEx("BFGTrail", frandom(-10,10), frandom(-10,10), frandom(0,20), frandom(-2.5,2.5), frandom(-2.5,2.5), frandom(-2.5,2.5), 0, SXF_CLIENTSIDE, 0);
		}
	Roam:
		BFS1 AAAABBBB 1 Bright 
		{
			A_SetScale(frandom(0.8,1.2),frandom(0.8,1.2));
			A_SpawnItemEx("BFGTrail", frandom(-10,10), frandom(-10,10), frandom(0,20), frandom(-2.5,2.5), frandom(-2.5,2.5), frandom(-2.5,2.5), 0, SXF_CLIENTSIDE, 0);
		}
		BFS1 A 0
		{
			A_SpawnProjectile("BFGZapper", 8, 0, 0, CMF_AIMDIRECTION | CMF_TRACKOWNER);
		}
		Loop;
	Death:
		BFE1 AAAAAAAAAAAAAAAA 0 Bright A_SpawnItemEx("BFGTrail", 0, frandom(-10,10), frandom(-10,10), 0, frandom(-5,5), frandom(-5,5), 0, SXF_CLIENTSIDE, 0);
		BFE1 A 0
		{
			A_StopSound(CHAN_BODY);
			A_PlaySound ("weapons/bfg/explode", CHAN_7, 1.0);
			A_Quake (8,20,0,750,0);
			//A_BFGSpray("BFGSpray", 20, 15, 360, 1024, 32, 0, BFGF_MISSILEORIGIN);
			//A_BFGSpray("BFGSpray", 40, 15, 90, 1024, 32, 0);
			A_BFGSpray("BFGSpray");
			A_Explode(128,128,!XF_HURTSOURCE);
		}
		BFE1 ABCDEF 4 Bright;
		TNT1 A 35;
		Stop;
	}
}

Class BFGTrail : Actor
{
	Default
	{
		RenderStyle "Add";
		Alpha 0.75;
		Scale 0.75;
		+NOINTERACTION;
	}
	States
	{
	Spawn:
		BTRL ABCD 3 Bright;
		Stop;
	}
}
Class BFGTrailSmall : BFGTrail { Default { Scale 0.5; } }

Class BFGZapper : Actor
{
	Default
	{
		Radius 2;
		Height 2;
		Speed 0;
		MinMissileChance 0;
		Projectile;
		+LOOKALLAROUND
		+NOINTERACTION
		//+ISMONSTER
		+SEEKERMISSILE
		//+FRIENDLY
		RenderStyle "Add";
		Obituary "$OB_MPBFG_SPLASH";
		AttackSound "weapons/bfg/spray";
		MissileHeight 0;
	}
	States
	{
	Spawn:
		TNT1 A 1 NoDelay A_SeekerMissile(0,0,SMF_CURSPEED|SMF_LOOK,256);
		Goto See;
	See:
		TNT1 A 1
		{
			if(tracer!=null)
			{
				A_PlaySound("weapons/bfg/spray");
				tracer.DamageMobj(target,target,20*random(1,3),'BFG',0,AngleTo(tracer)); //directly damages the tracer, attributing the damage to the projectile's owner
			}
			target = tracer; //we don't need the owner anymore, but we do need the target to shoot this laser effect at
			A_CustomRailgun(0, 0, "", "", RGF_SILENT | RGF_NOPIERCING, 1, 32, "BFGSpray", 0, 0, 0, 0, 4, 0, "BFGZapperTrail");
		}
		Goto Death;
	Death:
		TNT1 A 0;
		Stop;
	}
}

Class BFGSpray : Actor
{
	Default
	{
		+NOBLOCKMAP
		+NOGRAVITY
		+BLOODSPLATTER
		+EXTREMEDEATH
		RenderStyle "Add";
		Alpha 0.75;
	}
	States
	{
	Spawn:
		BFE2 A 0;
		BFE2 A 0 A_PlaySound("weapons/bfg/spray");
		BFE2 AAAAAAAAAAAAAAAA         0        A_SpawnItemEx("BFGTrailSmall", frandom(-10,10), frandom(-10,10), frandom(-10,10), frandom(-2.5,2.5), frandom(-5.0,5.0), frandom(-5.0,5.0), 0, SXF_CLIENTSIDE, 0);
		BFE2 AAAAAABBBBBBCCCCCCDDDDDD 1 Bright A_SpawnItemEx("BFGTrailSmall", frandom(-10,10), frandom(-10,10), frandom(-10,10), frandom(-2.5,2.5), frandom(-2.5,2.5), frandom(-2.5,2.5), 0, SXF_CLIENTSIDE, 0);
		Stop;
	}
}

Class BFGZapperTrail : Actor
{
	Default
	{
		RenderStyle "Add";
		Alpha 0.75;
		Scale 0.75;
		+NOINTERACTION
	}
	States
	{
	Spawn:
		BFE2 D 2 Bright;
		BTRL D 1 Bright;
		Stop;
	}
}

Class MetaBFGAltfire : Actor
{
	Default
	{
		Radius 13;
		Height 8;
		Speed 25;
		Damage 15;
		BounceType "Classic";
		BounceFactor 1.0;
		Projectile;
		+RANDOMIZE;
		RenderStyle "Add";
		Alpha 0.75;
		Obituary "$OB_MPBFG_MBF";
		Decal "GreenPlasmaScorch";
	}
	States
	{
	Spawn:
		PLS1 A 0 A_PlaySound ("weapons/plasmarifle/loop", CHAN_BODY, 1.0, 1);
		PLS1 AB 6 Bright;
		Loop;
	Death:
		PLS1 A 0 A_PlaySound("weapons/plasmarifle/hit");
		PLS1 CDEFG 4 Bright;
		Stop;
	}
}
