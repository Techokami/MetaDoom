/*
----------------------------
MetaDoom
Actor Definitions
Grenade Launcher
----------------------------
*/

class MetaGrenadeLauncherPickup : WeaponGiver
{
	Default
	{
		DropItem "MetaGrenadeLauncher";
		Inventory.PickupMessage "$GOTGRENLAUN";
		Inventory.PickupSound "weapons/grenadelauncher/get";
	}
	
	States
	{
	Spawn:
		GLAU Z 0;
		GLAU Z 0 { bDROPPED = 0; }
		GLAU Z -1;
		Stop;
	}
}

class MetaGrenadeLauncher : MetaDoomWeapon
{
	Default
	{
		Weapon.SelectionOrder 2500;
		Weapon.AmmoUse1 1;
		Weapon.AmmoUse2 3;
		Weapon.AmmoGive 4;
		Weapon.AmmoType1 "RocketAmmo";
		Weapon.AmmoType2 "RocketAmmo";
		+WEAPON.NOAUTOFIRE
		Inventory.PickupMessage "$GOTGRENLAUN";
		Tag "$TAGGRENLAUN";
		Inventory.PickupSound "weapons/grenadelauncher/get";
		+WEAPON.NOALERT
		+WEAPON.ALT_AMMO_OPTIONAL
		Weapon.BobRangeX 0.5;
		Weapon.BobRangey 0.75;
		Weapon.UpSound "weapons/grenadelauncher/use";
		//$Category "Weapons/MetaDoom"
		//$Title "Grenade Launcher"
		//$NotAngled
		//$Color 14
	}
	
	States
	{
	Ready:
		GLAU A 1 A_WeaponReady;
		"####" A 0 A_JumpIfInventory("MeleePunch", 1, "MeleePunch");
		Loop;
	Deselect:
		GLAU A 0 A_JumpIf(health <= 0, "DeadDude");
		GLAU A 0 A_PlaySound("weapons/swap");
	FinishDeselect:
		GLAU A 1 A_SmoothLower();
		Loop;
	Select:
		GLAU A 1 A_SmoothRaise();
		loop;
	Fire:
		GLAU B 0;
		GLAU B 3 bright
		{
			A_FireProjectile ("GrenadeLauncherProj");
			A_PlaySound ("weapons/grenadelauncher/fire", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_AlertMonsters();
			A_Overlay(14, "Overlay.Fire");
		}
		GLAU C 2 bright;
		GLAU D 2 bright;
		GLAU E 2 bright;
		GLAU F 2;
		GLAU A 2;
		GLAU GHIJA 2;
		GLAU A 2;
		GLAU A 0 A_Refire;
		Goto Ready;
	AltFire:
		GLAU A 0 A_JumpIfInventory("RocketAmmo",3,"GasShot");
		GLAU A 1 Offset(0,34) A_PlaySound("weapons/grenadelauncher/altdeny", CHAN_BODY);
		GLAU A 1 Offset(0,33);
		GLAU A 1 Offset(0,32);
		GLAU A 10;
		goto Ready;
	GasShot:
		GLAU B 0 A_GunFlash;
		GLAU B 3 bright
		{
			A_FireProjectile ("GasBombProj");
			A_PlaySound ("weapons/grenadelauncher/altfire", CHAN_WEAPON);
			
			if (CountInv("PowerDamage") > 0)
			{
				A_PlaySound("powerups/quad/use", CHAN_5);
			}
			
			A_GunFlash();
			A_AlertMonsters();
			A_Overlay(14, "Overlay.Fire");
		}
		GLAU C 2 bright;
		GLAU D 2 bright;
		GLAU E 2 bright;
		GLAU F 2;
		GLAU A 2;
		GLAU GHIJA 2;
		GLAU A 2;
		GLAU A 0 A_Refire;
		Goto Ready;
	Flash:
		TNT1 A 3 Bright A_Light1;
		TNT1 A 4 Bright;
		TNT1 AA 4 Bright A_Light2;
		Goto LightDone;
	Spawn:
		GLAU Z -1;
		Stop;
		
	Overlay.Fire:
		TNT1 B 1 { A_WeaponOffset(0,45,WOF_INTERPOLATE); A_SetPitch(pitch-2, SPF_INTERPOLATE); }
		TNT1 B 1 { A_WeaponOffset(0,52,WOF_INTERPOLATE); A_SetPitch(pitch-2, SPF_INTERPOLATE); }
		TNT1 B 1 A_WeaponOffset(0,53,WOF_INTERPOLATE);
		TNT1 C 1 { A_WeaponOffset(0,50,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 C 1 { A_WeaponOffset(0,48,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 C 1 { A_WeaponOffset(0,46,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 D 1 { A_WeaponOffset(0,45,WOF_INTERPOLATE); A_SetPitch(pitch+1, SPF_INTERPOLATE); }
		TNT1 D 1 A_WeaponOffset(0,42,WOF_INTERPOLATE);
		TNT1 D 1 A_WeaponOffset(0,38,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(0,36,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(0,34,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		TNT1 A 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		TNT1 A -1;
		stop;
	}
}

class GrenadeLauncherProj : Actor
{
	Default
	{
		+CANBOUNCEWATER
		Radius 8;
		Height 8;
		Speed 30;
		Damage 20;
		PROJECTILE;
		+RANDOMIZE
		-NOGRAVITY
		+USEBOUNCESTATE
		+ROLLSPRITE
		BounceType "Doom";
		BounceSound "weapons/grenadelauncher/bounce";
		Obituary "$OB_GRENLAUNCHER";
		scale 0.5;
		ReactionTime 60;	//Just over five seconds;
		Damagetype "Explosive";
	}
	
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 ThrustThingZ(0,16,0,1);
		TNT1 A 0; //A_PlaySound("weapons/grenadethrow")
		goto Flying;
	Flying:
		GBOM ABCD 4 A_CountDown;
		loop;
	Bounce:
		"####" # 0 A_Jump(128, "Bounce2", "Flying");
		goto Bounce1;
	Bounce1:
		"####" # 0 A_CountDown;
		"####" # 1 A_SetRoll((roll + 5));
		"####" # 1 A_SetRoll((roll + 5));
		"####" # 1 A_SetRoll((roll + 5));
		loop;
	Bounce2:
		"####" # 0 A_CountDown;
		"####" # 1 A_SetRoll((roll - 5));
		"####" # 1 A_SetRoll((roll - 5));
		"####" # 1 A_SetRoll((roll - 5));
		loop;
	Death:
		TNT1 A 0 A_SpawnItemEx("GrenadeLauncherExplosion",0,0,24,0,0,0,0,SXF_TRANSFERPOINTERS);
		Stop;
	}
}

class GrenadeLauncherExplosion : MetaExplosion
{
	States
	{
	Spawn:
	EXPL A 0;
	EXPL A 2 BRIGHT
	{
		A_PlaySound("weapons/grenadelauncher/explode", CHAN_WEAPON);
		A_Explode();
		A_Quake (3,10,0,750,0);
		A_SpawnItem("Shockwave",0,0);
		
		if (pos.z <= (floorz + 64))
		{
			A_SpawnItem("ExplosionScorchMark",0,0);
		}
	}
	EXPL B 2 BRIGHT;
	EXPL C 2 BRIGHT;
	EXPL DEF 2;
	Stop;
	}
}

class GasBombProj : Actor
{
	Default
	{
		+CANBOUNCEWATER
		Radius 8;
		Height 8;
		Speed 30;
		Damage 0;
		PROJECTILE;
		+RANDOMIZE
		-NOGRAVITY
		+USEBOUNCESTATE
		+ROLLSPRITE
		BounceType "Doom";
		-BOUNCEONFLOORS
		BounceSound "weapons/grenadelauncher/bounce";
		Obituary "$OB_GRENLAUNCHER_GAS";
		scale 0.5;
	}
	
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 ThrustThingZ(0,16,0,1);
		goto Flying;
	Flying:
		GBOM ABCD 4;
		loop;
	Bounce:
		"####" # 0 A_Jump(128, "Bounce2", "Flying");
		goto Bounce1;
	Bounce1:
		"####" # 0 A_CountDown;
		"####" # 1 A_SetRoll((roll + 5));
		"####" # 1 A_SetRoll((roll + 5));
		"####" # 1 A_SetRoll((roll + 5));
		loop;
	Bounce2:
		"####" # 0 A_CountDown;
		"####" # 1 A_SetRoll((roll - 5));
		"####" # 1 A_SetRoll((roll - 5));
		"####" # 1 A_SetRoll((roll - 5));
		loop;
	Death:
		TNT1 A 0 A_SpawnItemEx("GasBombExplosion",0,0,24,0,0,0,0,SXF_TRANSFERPOINTERS);
		Stop;
	}
}

class GasBombExplosion : Actor
{
	Default
	{
		Radius 10;
		Height 10;
		Speed 5;
		PROJECTILE;
		+NOCLIP
		Decal "Scorch";
		Obituary "$OB_GRENLAUNCHER_GAS";
	}
	
	States
	{
	Spawn:
		EXPL A 0;
		EXPL A 2 BRIGHT
		{
			A_PlaySound("weapons/grenadelauncher/gasbomb", CHAN_WEAPON);
			A_Explode(32,128);
			A_Quake (3,10,0,750,0);
			
			if (pos.z <= (floorz + 64))
			{
				A_SpawnItem("ExplosionScorchMark",0,0);
			}
			
			A_SpawnItemEx("GasBombCloud",0,0,4,random(0,1),random(0,1),0,random(0,360));
			A_SpawnItemEx("GasBombCloud",0,0,4,random(0,1),random(0,1),0,random(0,360));
			A_SpawnItemEx("GasBombCloud",0,0,4,random(0,1),random(0,1),0,random(0,360));
			A_SpawnItemEx("GasBombCloud",0,0,4,random(0,1),random(0,1),0,random(0,360));
		}
		EXPL B 2 BRIGHT;
		EXPL C 2 BRIGHT;
		EXPL DEF 2;
		Stop;
	}
}

class GasBombCloud : Actor
{
	Default
	{
		Radius 32;
		Height 32;
		Mass 0x7fffffff;
		+NOBLOCKMAP
		+NOGRAVITY
		+DROPOFF
		-SOLID
		//+NODAMAGETHRUST
		+DONTSPLASH
		+BLOODLESSIMPACT
		-BLOCKEDBYSOLIDACTORS
		+ROLLSPRITE
		RenderStyle "Translucent";
		Obituary "$OB_GRENLAUNCHER_GAS";
		Alpha 0.6;
		DamageType "PoisonCloud";
	}

	States
	{
	Spawn:
		GBOC X 0;
		GBOX X 0 A_SetRoll(random(0,360));
		GBOC XXXXXXXXXXXXXXXX 2 A_Explode(4,70);
		GBOC XXXXXXXXXXXXXXXX 2 A_Explode(4,70);
		GBOC XXXXXXXXXXXXXXXX 2 A_Explode(4,70);
	Death:
		GBOC X 1 A_FadeOut(0.05);
		loop;
	}
}