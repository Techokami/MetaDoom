/*
----------------------------
MetaDoom
Actor Definitions
Hand Grenade
----------------------------
*/

class HandGrenadePickup : CustomInventory
{
	Default
	{
		inventory.pickupmessage "$GOTGRENADES";
		Tag "$TAGGRENADES";
		inventory.icon "INVGREN";
		inventory.pickupsound "inventory/grenade/get";
		+INVENTORY.ALWAYSPICKUP;
		scale 0.5;
		+BLOCKASPLAYER;
		//$Category "MetaDoom Inventory Items"
		//$Title "Frag Grenade"
		//$NotAngled
		//$Color 9
	}
	
	states
	{
	Spawn:
		HGRE Z -1;
		stop;
	Pickup:
		TNT1 A 0 
		{
			A_GiveInventory ("HandGrenade", 1);
			A_GiveInventory("InventoryFuel_HandGrenade", INV_COOLDOWN_GENERIC);
		}
		stop;
	}
}

class HandGrenade : CustomInventory
{
	Default
	{
		inventory.pickupmessage "$GOTGRENADES";
		Tag "$TAGGRENADES";
		inventory.icon "INVGREN";
		inventory.pickupsound "inventory/grenade/get";
		inventory.amount 1;
		inventory.maxamount 1;
		+INVENTORY.INVBAR
		scale 0.5;
	}
	
	states
	{
	Spawn:
		HGRE Z -1;
		stop;
	Use:
		TNT1 A 0
		{
			if (CountInv("InventoryFuel_HandGrenade") >= INV_COOLDOWN_GENERIC)
			{
				A_FireProjectile("HandGrenadeProj",0,0);
				A_TakeInventory("InventoryFuel_HandGrenade", 999);
			} else {
				A_PlaySound("menu/invalid");
			}
		}
		fail;
	}
}

// EdTheBat helped get this lookin' good - https://forum.zdoom.org/viewtopic.php?p=941872#p941872
class HandGrenadeProj : Actor
{
	Default
	{
		Radius 8;
		Height 8;
		Speed 30;
		Damage 0;
		PROJECTILE
		+RANDOMIZE;
		-NOGRAVITY;
		+USEBOUNCESTATE;
		+ROLLSPRITE;
		+CANBOUNCEWATER;
		+BOUNCEAUTOOFF;
		BounceType "Doom";
		SeeSound "inventory/throw";
		BounceSound "inventory/grenade/bounce";
		Obituary "$OB_MPGRENADE";
		scale 0.5;
		BounceFactor 0.3;
		WallBounceFactor 0.2;
		Damagetype "Explosive";
	}
	
	
	int user_timer;
	
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 
		{
			ThrustThingZ(0,35,0,1);
			A_PlaySound("weapons/grenadethrow");
			user_timer = 0;
		}
		goto Flying;
	Flying:
		HGRE ABCDEFGH 3 
		{
			if (user_timer>=44)
			{
				return ResolveState("XDeath");
			} else {
				user_timer++;
				return ResolveState(null);
			}
		}
		loop;
	Bounce:
		"####" # 0 A_Jump(128, "Bounce2", "Flying");
		goto Bounce1;
	Bounce1:
		"####" # 0 
		{
			if (user_timer>=44)
			{
				return ResolveState("XDeath");
			} else {
				user_timer++;
				return ResolveState(null);
			}
		}
		"####" # 1 A_SetRoll((roll + 5));
		"####" # 1 A_SetRoll((roll + 5));
		"####" # 1 A_SetRoll((roll + 5));
		loop;
	Bounce2:
		"####" # 0 
		{
			if (user_timer>=44)
			{
				return ResolveState("XDeath");
			} else {
				user_timer++;
				return ResolveState(null);
			}
		}
		"####" # 1 A_SetRoll((roll - 5));
		"####" # 1 A_SetRoll((roll - 5));
		"####" # 1 A_SetRoll((roll - 5));
		loop;
	Death:
		"####" # 0 { A_Stop(); A_PlaySound("inventory/grenade/bounce", CHAN_BODY, 0.5); }
		"####" # 1 
		{
			if (user_timer>=44)
			{
				return ResolveState("XDeath");
			} else {
				user_timer++;
				return ResolveState(null);
			}
		}
		Goto Death+1;
	XDeath:
		TNT1 A 0 A_SpawnItemEx("MetaExplosion",0,0,24,0,0,0,0,SXF_TRANSFERPOINTERS);
		Stop;
	}
}

class HandGrenadeExplosion : MetaExplosion
{
	Default
	{
		scale 1.5;
	}
	
	States
	{
		Spawn:
		EXPL A 0;
		EXPL A 2 BRIGHT
		{
			A_PlaySound("weapons/explosion", CHAN_WEAPON);
			A_Explode(128,192);
			A_Quake (3,10,0,750,0);
			A_SpawnItem("Shockwave",0,0);
			
			if (pos.z <= (floorz + 64))
			{
				A_SpawnItem("ExplosionScorchMark",0,0);
			}
		}
		EXPL B 2 BRIGHT;
		EXPL C 2 BRIGHT;
		EXPL DEF 2;
		Stop;
	}
}