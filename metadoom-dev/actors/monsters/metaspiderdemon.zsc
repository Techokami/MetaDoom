/*
----------------------------
MetaDoom
Actor Definitions
Spiderdemon
----------------------------
*/

// Faster, Deadlier, Scarier

class MetaSpiderMastermind : MonsterCore
{
	Default
	{
		Health 3200;
		Radius 100;
		Height 100;
		Mass 1000;
		Speed 24;
		PainChance 40;
		Monster;
		MinMissileChance 160;
		scale 0.8;
		+BOSS
		+MISSILEMORE
		+FLOORCLIP
		+NORADIUSDMG
		+DONTMORPH
		+NODROPOFF
		//+BOSSDEATH
		SeeSound "monsters/spidermastermind/see";
		PainSound "monsters/spidermastermind/pain";
		DeathSound "monsters/spidermastermind/die1";
		ActiveSound "monsters/spidermastermind/idle";
		Obituary "$OB_SPIDER";
		damagefactor "ChaingunTurret", 0.2;
		painchance "ChaingunTurret", 0;
		painchance "Vampire", 128;
		damagefactor "Vampire", 0.25;
		damagefactor "Tesla", 0.25;
		MonsterCore.CanBeScared false;
		Tag "Spider Mastermind";
		//$Category "Monsters/MetaDoom/Bosses"
		//$Title "Spider Mastermind"
		//$Color 12
	}
	
	States
	{
	Spawn:
		SPID A 10 A_Look;
		Loop;
	See:
		SPID S 0;
		SPID S 0 A_Quake(5,30,0,2048,0);
		SPID S 35 A_FaceTarget();
		goto Roam;
	Roam:
		SPID A 3 { A_FastChase(); A_PlaySound("monsters/spidermastermind/walk"); }
		SPID ABB 3 A_FastChase();
		SPID C 3 { A_FastChase(); A_PlaySound("monsters/spidermastermind/walk"); }
		SPID CDD 3 A_FastChase();
		SPID E 3 { A_FastChase(); A_PlaySound("monsters/spidermastermind/walk"); }
		SPID EFF 3 A_FastChase();
		Loop;
	Missile:
		SPID A 0
		{
			// if the target is within reasonable reach, have a
			// 1-in-4 chance of using the telekinetic attack
			int targdist = level.Vec3Diff(pos, target.pos).length();
			
			//Console.printf("Distance to Target: %i", targdist);
			
			if (targdist > 164 && targdist < 1024)
			{
				int dice = random(1,4);
				
				if (dice == 1)
				{
					SetStateLabel("RollerTKAttack");
				}
			}
		}
		//SPID A 0 A_Jump(64, "RollerTKAttack");
		goto RapidAttack;
	RapidAttack:
		SPID A 20 BRIGHT { A_FaceTarget(); A_PlaySound("monsters/spidermastermind/ready1"); }
		SPID G 4 BRIGHT
		{
			A_SpawnProjectile("MetaSpiderdemonBall",32,0,random(-16,16),CMF_OFFSETPITCH,random(-4,4));
			A_SpawnProjectile("MetaSpiderdemonBall",32,0,random(-16,16),CMF_OFFSETPITCH,random(-4,16));
			A_SpawnProjectile("MetaSpiderdemonBall",32,0,random(-16,16),CMF_OFFSETPITCH,random(-4,4));
			A_SpawnProjectile("MetaSpiderdemonBall");
			A_PlaySound("monsters/spidermastermind/fire");
		}
		SPID H 4 BRIGHT
		{
			A_SpawnProjectile("MetaSpiderdemonBall",32,0,random(-16,16),CMF_OFFSETPITCH,random(-4,4));
			A_SpawnProjectile("MetaSpiderdemonBall",32,0,random(-16,16),CMF_OFFSETPITCH,random(-4,16));
			A_SpawnProjectile("MetaSpiderdemonBall",32,0,random(-16,16),CMF_OFFSETPITCH,random(-4,4));
			A_SpawnProjectile("MetaSpiderdemonBall");
			A_PlaySound("monsters/spidermastermind/fire");
		}
		SPID H 1 BRIGHT A_MonsterRefire(20, "Roam");
		Goto RapidAttack+1;
	RollerTKAttack:
		SPID A 0 A_Stop;
		SPID A 0 { A_FaceTarget(); A_PlaySound("monsters/spidermastermind/ready2", CHAN_6); }
		SPID A 0 BRIGHT
		{
			A_FaceTarget();
			
			for (int i = 0; i < 12; i ++)
			{
				A_SpawnProjectile("SpiderDemonChargeupParticle",64,0,(30 * i),CMF_OFFSETPITCH,random(0,-32));
			}
			
		}
		SPID Z 0 A_PlaySound("monsters/spidermastermind/tkwave");
		SPID Z 35 BRIGHT;
		SPID X 4 BRIGHT
		{
			for (int i = 0; i < 12; i ++)
			{
				A_SpawnProjectile("MetaSpiderdemonTKBall",64,0,(30 * i),CMF_AIMDIRECTION,0);
			}
		}
		SPID YZY 4 BRIGHT;
		SPID X 4 BRIGHT
		{
			for (int i = 0; i < 12; i ++)
			{
				A_SpawnProjectile("MetaSpiderdemonTKBall",64,0,(30 * i),CMF_AIMDIRECTION,0);
			}
		}
		SPID YZY 4 BRIGHT;
		SPID X 4 BRIGHT
		{
			for (int i = 0; i < 12; i ++)
			{
				A_SpawnProjectile("MetaSpiderdemonTKBall",64,0,(30 * i),CMF_AIMDIRECTION,0);
			}
		}
		SPID YZY 4 BRIGHT;
		SPID Z 4 BRIGHT
		{
			for (int i = 0; i < 12; i ++)
			{
				A_SpawnProjectile("MetaSpiderdemonTKBall",64,0,(30 * i),CMF_AIMDIRECTION,0);
			}
		}
		SPID YZY 4 BRIGHT;
		SPID X 4 BRIGHT
		{
			for (int i = 0; i < 12; i ++)
			{
				A_SpawnProjectile("MetaSpiderdemonTKBall",64,0,(30 * i),CMF_AIMDIRECTION,0);
			}
		}
		SPID YZY 4 BRIGHT;
		SPID Z 35;
		goto Roam;
	Pain.Axe:
	Pain.Fist:
	Pain.BerserkFist:
	Pain:
		SPID I 3;
		SPID I 3 A_Pain;
		Goto Roam;
	Death:
		SPID J 0 A_GiveToTarget("ScoreItem", 10000);
		SPID J 20 A_Scream;
		SPID K 10 A_NoBlocking;
		SPID L 10 A_PlaySound("monsters/spidermastermind/die2", CHAN_AUTO, 1.0, 0, ATTN_NONE);
		SPID M 0
		{
			for (int i = 0; i < 6; i++)
			{
				A_SpawnProjectile ("CyberdemonExplosionParticle", random(8,48), 0, random (0, 360), 2, random (-8, 8));
				A_SpawnProjectile ("CyberdemonExplosionParticle", random(48,64), 0, random (0, 360), 2, random (-8, 8));
			}
			
			A_Quake (4,25,0,750,0);
			
			for (int i = 0; i < 4; i++)
			{
				A_SpawnProjectile ("CyberdemonGibber", random(8,32), 0, random (0, 360), 2, random (32, 64));
				A_SpawnProjectile ("CyberdemonGibber", random(32,64), 0, random (0, 360), 2, random (64, 110));
			}
			A_SpawnItem("CyberdemonExplosionScorchMark",0,0);
			A_SpawnItem("CyberdemonExplosionShockwave",0,32);
		}
		SPID MNOPPP 10;
		SPID P 30;
		SPID P -1 A_KillMaster; //A_BossDeath
		Stop;
	Crush:
		SPIG A 0 A_SpawnItem("MetaSpiderMastermindCrush");
		stop;
	}
	
	// Go a little transparent when dead and a player is near, to avoid
	// getting in the way and all
	override void Tick()
	{
		if (CheckProximity ("MetaDoomPlayer", 96, 1) && bCORPSE)
		{
			A_SetRenderStyle(0.75, STYLE_Translucent);
		} else {
			A_SetRenderStyle(1.0, STYLE_Normal);
		}
		Super.Tick();
	}
}

class MetaSpiderdemonBall : Actor
{
	Default
	{
	Radius 6;
	Height 8;
	Speed 32;
	FastSpeed 48;
	Damage 4;
	Projectile;
	+RANDOMIZE
	+EXTREMEDEATH
	RenderStyle "Add";
	Alpha 1;
	decal "DoomImpScorch";
	damagetype "SpiderdemonAttack";
	}
	
	States
	{
	Spawn:
		APLS A 0 A_PlaySound ("weapons/plasmarifle/loop", CHAN_BODY, 1.0, 1);
		APLS AB 5 BRIGHT;
		Loop;
	Death:
		APBX A 0 A_Quake (3,5,0,750,0);
		APBX A 0 A_Explode(8,64,!XF_HURTSOURCE);
		APBX A 0 A_StopSound(CHAN_BODY);
		APBX A 0 A_PlaySound("monsters/spidermastermind/firehit",CHAN_7);
		APBX ABCDE 5 BRIGHT;
		Stop;
	}
}

class SpiderDemonChargeupParticle : Actor
{
	Default
	{
	Radius 3;
	Height 3;
	Speed 32;
	FastSpeed 32;
	Damage 0;
	Projectile;
	+RANDOMIZE
	+NOINTERACTION
	RenderStyle "Add";
	Alpha 1;
	scale 0.5;
	}

	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 8;
		TNT1 A 0 a_scalevelocity (-0.3); //A_ChangeVelocity(-4, 0, 0, CVF_RELATIVE | CVF_REPLACE)
	FlyForABit:
		SBSH AAAAAAAAAAAAAAAAAAAAAAAAA 1 BRIGHT A_SetScale(scale.x + 0.1);
	Death:
		TNT1 A 0;
		Stop;
	}
}

class MetaSpiderdemonTKBall : Actor
{
	Default
	{
	Radius 8;
	Height 16;
	Speed 8;
	FastSpeed 8;
	DamageFunction (32);
	Projectile;
	+RANDOMIZE
	-NOGRAVITY	
	+NOEXPLODEFLOOR
	+EXTREMEDEATH
	gravity 0.25;
	RenderStyle "Add";
	scale 2;
	Alpha 1;
	decal "CacoScorch";
	damagetype "SpiderdemonTKAttack";
	}
	
	States
	{
	Spawn:
		BAL2 A 0;
		BAL2 A 0 A_PlaySound("monsters/caco/lightningball/loop", CHAN_BODY, 1.0, 1);
		BAL2 ABABAB 4 BRIGHT;
		BAL2 A 0 { bNoGravity = 0; }
		BAL2 A 0 ThrustThingZ(0,0,0,0);
	Idle:
		BAL2 AB 4 BRIGHT;
		Loop;
	Death:
		BAL2 A 0 A_StopSound(CHAN_BODY);
		BAL2 A 0 A_Quake (3,5,0,750,0);
		BAL2 A 0 A_Explode(8,64,!XF_HURTSOURCE);
		BAL2 C 0 A_PlaySound("monsters/spidermastermind/firehit", CHAN_7);
		BAL2 CDE 6 BRIGHT;
		Stop;
	}
	
	override int SpecialMissileHit (Actor victim)
	{
		if (victim is "PlayerPawn" ||
		(victim is "MonsterCore" && victim.bBOSS == false))
		{
			victim.vel.z = 16;
		}
		
		return Super.SpecialMissileHit(victim);
	}
}

class MetaSpiderMastermindCrush : Actor
{
	Default
	{
	+DROPOFF
	+CORPSE
	+NOTELEPORT
	+DONTGIB
	}
	
	States
	{
		Spawn:
			SPIG A 0;
			SPIG A 0 
			{	
				A_PlaySound("monsters/crushed");
			}
			SPIG A -1;
			Stop;
	}
}