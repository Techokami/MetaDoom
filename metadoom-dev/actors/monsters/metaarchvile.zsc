/*
----------------------------
MetaDoom
Actor Definitions
Archvile
----------------------------
*/

// Currently more or less identical to the original Doom monster, behavior-wise.
// TODO: Twiddle with, add at least one variant!

class MetaArchvile : MonsterCore
{
	Default
	{
		Health 700;
		Radius 20;
		Height 56;
		Mass 500;
		Speed 15;
		PainChance 10;
		Monster;
		MaxTargetRange 896;
		DropItem "BFGAmmo";
		+QUICKTORETALIATE
		+FLOORCLIP
		+NOTARGET
		SeeSound "monsters/archvile/see";
		PainSound "monsters/archvile/pain";
		DeathSound "monsters/archvile/die";
		ActiveSound "monsters/archvile/idle";
		MeleeSound "vile/stop";
		Obituary "$OB_VILE";
		damagefactor "HolyWater", 1.5;
		painchance "HolyWater", 255;
		Tag "Arch-Vile";
		//$Category "Monsters/MetaDoom/Arch-Vile"
		//$Title "Arch-Vile"
		//$Color 12
	}

	States
	{
	Spawn:
		VILE AB 10 A_Look;
		Loop;
	See:
		VILE AABBCCDDEEFF 2 A_MetaVileChase;
		Loop;
	Missile:
		VILE G 0 BRIGHT A_PlaySound("monsters/archvile/magic", CHAN_VOICE);
		VILE G 10 BRIGHT A_FaceTarget ;
		VILE H 8 BRIGHT A_VileTarget("MetaArchvileFire");
		VILE IJKLMN 8 BRIGHT A_FaceTarget;
		VILE O 0 BRIGHT A_JumpIfInTargetInventory("FireExtinguished",1,"MissileFailed");
		VILE O 8 BRIGHT A_VileAttack("monsters/archvile/boom", 20, 70, 70, 1, "Fire");
		VILE P 20 BRIGHT;
		Goto See;
	MissileFailed:
		VILE O 8 BRIGHT A_PlaySound("monsters/archvile/dud");
		VILE P 20 BRIGHT;
		VILE A 10;
		VILE Q 10;
		VILE A 5;
		Goto See;
	Heal:
		VILE A 0;
		VILE A 0 A_PlaySound("monsters/archvile/resurrect", CHAN_VOICE);
		VILE "[\]" 10 BRIGHT;
		Goto See;
	Pain:
		VILE Q 0;
		VILE Q 5 A_Pain;
		Goto See;
	Death:
		VILE Q 7 			// Make a filthy great mess once the Archvile dies,
		{					// to make a point of it not being rez-ible.
			bSPRITEFLIP = random(0,1);

			A_GiveToTarget("ScoreItem", 1000);
			A_PlaySound("monsters/archvile/gib",CHAN_AUTO,0.8);
			for (int i = 0; i < 5; i++)
			{
				A_SpawnProjectile ("FlyingBlood", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
				A_SpawnProjectile ("MetaSploosh", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
			}
			A_SpawnItemEx ("MetaGib3", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib4", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib5", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib6", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib3", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib4", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib5", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib6", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItem("BloodSplat");
			A_SpawnItem("SoulSpawner");
		}
		VILE R 7 A_Scream;
		VILE S 7 A_NoBlocking;
		VILE TUVWXY 7;
		VILE Z -1;
		Stop;
	}
}

// Arch Vile Fire
class MetaArchvileFire : Actor
{
	Default
	{
		+NOBLOCKMAP
		+NOGRAVITY
		RenderStyle "Add";
		Alpha 1;
	}

	States
	{
	Spawn:
		FIRE A 2 BRIGHT  A_StartFire;
		FIRE BAB 2 BRIGHT  A_Fire();
		FIRE C 2 BRIGHT  { A_PlaySound("monsters/archvile/flames"); A_Fire(); }
		FIRE BCBCDCDCDEDED 2 BRIGHT  A_Fire();
		FIRE E 2 BRIGHT  { A_PlaySound("monsters/archvile/flames"); A_Fire(); }
		FIRE FEFEFGHGHGH 2 BRIGHT  A_Fire();
		Stop;
	}
}

// The Summoner, from Doom 2016.
// Hurls popcorn enemies out in babby bosscubes and zooms around like a bastard

class MetaSummoner : MonsterCore
{
	Default
	{
		Health 600;
		Radius 20;
		Height 56;
		Mass 500;
		Speed 16;
		PainChance 10;
		Monster;
		MaxTargetRange 896;
		DropItem "BFGAmmo";
		+QUICKTORETALIATE
		+FLOORCLIP
		+NOTARGET
		+FLOATBOB
		SeeSound "monsters/summoner/see";
		PainSound "monsters/summoner/pain";
		DeathSound "monsters/summoner/die";
		ActiveSound "monsters/summoner/idle";
		MeleeSound "vile/stop";
		Obituary "$OB_SUMMONER";
		damagefactor "HolyWater", 1.5;
		painchance "HolyWater", 255;
		yscale 0.9;
		tag "Summoner";
		//$Category "Monsters/MetaDoom/Arch-Vile"
		//$Title "Summoner"
		//$Color 12
	}
	
	int outtasight;
	

	States
	{
	Spawn:
		SUMN ABCDCB 10 A_Look;
		Loop;
	See:
		SUMN E 0 A_Jump(90, "Teleport");
		SUMN EEFFGG 2 A_MetaVileChase;
		SUMN G 0 A_Jump(90, "Teleport");
		SUMN GGFF 2 A_MetaVileChase;
		VILE A 0 A_Jump(90, "Popcorn");
		Loop;
	SeeAlreadyTeleportedLately:
		SUMN EEFFGG 2 A_MetaVileChase;
		SUMN GGFF 2 A_MetaVileChase;
		SUMN A 0 A_Jump(90, "Popcorn");
		goto See;
	Missile:
		SUMN A 0 A_Jump(90, "Popcorn");
		SUMN I 0 BRIGHT A_PlaySound("monsters/archvile/magic", CHAN_VOICE);
		SUMN I 10 BRIGHT A_FaceTarget;
		SUMN J 8 BRIGHT A_VileTarget("MetaArchvileFire");
		SUMN KLMN 8 BRIGHT A_FaceTarget;
		SUMN O 0 BRIGHT A_JumpIfInTargetInventory("FireExtinguished",1,"MissileFailed");
		SUMN O 8 BRIGHT A_VileAttack("monsters/archvile/boom", 20, 70, 70, 1, "Fire");
		SUMN PQ 10 BRIGHT;
		Goto See;
	MissileFailed:
		SUMN O 8 BRIGHT A_PlaySound("monsters/archvile/dud");
		SUMN P 20 BRIGHT;
		SUMN A 10;
		SUMN S 10;
		SUMN A 5;
		Goto See;
	Heal:
		SUMN A 0;
		SUMN A 0 A_PlaySound("monsters/archvile/resurrect", CHAN_VOICE);
		SUMN R 10 BRIGHT;
		Goto See;
	Popcorn:
		SUMN A 0
		{
			FLineTraceData SurfaceData;
			
			// Limit popcorning if can't see player
			if (CheckIfSeen())
			{
				if (outtasight < 2)
				{
					if (meta_developer)
							Console.printf("Summoner at %i x %i is summoning out of player sight", self.pos.x, self.pos.y);
					outtasight++;
				} else {
					if (meta_developer)
							Console.printf("Summoner at %i x %i isn't summoning out of player sight", self.pos.x, self.pos.y);
					SetStateLabel("See");
				}
			}

			// Prevent popcorning from happening if there's not enough room, one way or another
			BlockThingsIterator it = BlockThingsIterator.Create(self,32,0);
			while (it.Next())
			{
				Actor mo = it.thing;
				
				if (mo is "MetaUnwilling")
				{
					if (meta_developer)
						Console.printf("Summoner at %i x %i uncomfortable with popcorn proximity", self.pos.x, self.pos.y);
					SetStateLabel("See");
					break;
				}
			}
			
			for (int i = 0; i < 8; i++)
			{
				self.LineTrace(45*i, 32, 0, TRF_THRUACTORS, offsetz: self.height/2, data:SurfaceData);
				
				if (SurfaceData.HitType == SurfaceData.TRACE_HitWall)
				{
					if (meta_developer)
							Console.printf("Summoner at %i x %i doesn't have the room to summon", self.pos.x, self.pos.y);
						SetStateLabel("See");
				}
			}
		}
		SUMN NLKJ 4;
		SUMN I 0 
		{
			if (ceilingz - floorz < 256 || !A_SetSize(-1,256,true))
			{
				SetStateLabel("PopcornLow");
			}
			A_SetSize(-1, 56);
		}
	PopcornHigh:
		SUMN N 20 
		{
			A_PlaySound("monsters/summoner/popcorn", CHAN_VOICE);
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,54,random(8,16),0,random(0,8),random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,54,random(8,16),0,random(0,8),random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,54,random(8,16),0,random(0,8),random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,54,random(8,16),0,random(0,8),random(0,360));
		}
		SUMN RA 4;
		goto See;
	PopcornLow:
		SUMN N 20 
		{
			A_PlaySound("monsters/summoner/popcorn", CHAN_VOICE);
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,32,random(8,16),0,0,random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,32,random(8,16),0,0,random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,32,random(8,16),0,0,random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,32,random(8,16),0,0,random(0,360));
		}
		SUMN RA 4;
		goto See;
	Teleport:
		SUMN A 5 BRIGHT;
		SUMN B 4 BRIGHT;
		SUMN C 2 BRIGHT;
		SUMN DABD 1 BRIGHT;
		VILE A 0 A_PlaySound("monsters/summoner/warp", CHAN_6);
		Goto TeleLoop;
	TeleLoop:
		TNT1 AAAAA 0 A_Chase(null, null);
		TNT1 A 0 A_SpawnItem("MetaSummonerWarpTrail");
		TNT1 AAAAA 0 A_Chase(null, null);
		TNT1 A 0 A_SpawnItem("MetaSummonerWarpTrail");
		TNT1 AAAAA 0 A_Wander;
		TNT1 A 0 A_SpawnItem("MetaSummonerWarpTrail");
		TNT1 AAAAA 0 A_Wander;
		TNT1 A 0 A_Jump(128, "TeleStop");
		loop;
	TeleStop:
		VILE A 0 A_PlaySound("monsters/summoner/warp", CHAN_7);
		SUMN ABC 4 BRIGHT;
		Goto SeeAlreadyTeleportedLately;
	Pain:
		SUMN R 5;
		SUMN R 5 A_Pain;
		SUMN A 0 A_Jump(128, "Teleport");
		Goto See;
	Death:
		SUMN T 7 			// Make a filthy great mess once the Archvile dies,
		{					// to make a point of it not being rez-ible.
			bSPRITEFLIP = random(0,1);

			A_GiveToTarget("ScoreItem", 1000);
			A_PlaySound("monsters/archvile/gib",CHAN_AUTO,0.8);

			for (int i = 0; i < 5; i++)
			{
				A_SpawnProjectile ("FlyingBlood", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
				A_SpawnProjectile ("MetaSploosh", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
			}

			A_SpawnItemEx ("MetaGib3", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib4", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib5", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib6", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib3", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib4", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib5", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib6", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItem("BloodSplat");
			A_SpawnItem("SoulSpawner");
			bFLOATBOB = 0;
		}
		SUMN U 7 A_Scream;
		SUMN V 7 A_NoBlocking;
		SUMN WX 7;
		SUMN Y -1;
		Stop;
	}
}

class MetaSummonerPopcorn : Actor
{
	Default
	{
		+CANBOUNCEWATER
		Radius 20;
		Height 56;
		Speed 20;
		Damage 0;
		PROJECTILE;
		+RANDOMIZE
		-NOGRAVITY
		gravity 0.5;
		scale 0.5;
		SeeSound "inventory/throw";
	}

	States
	{
	Spawn:
		BOSF A 0;
		BOSF A 0 A_JumpIf((ceilingz - floorz) < 72, "SpawnLow");
	SpawnHigh:
		BOSF A 0 ThrustThingZ(0,32,0,1);
		goto Bounce;
	SpawnLow:
		BOSF A 0 A_ScaleVelocity(1.5);
		goto Bounce;
	Bounce:
		BOSF ABCD 3 BRIGHT;
		loop;
	Death:
		TNT1 A 0 
		{
			A_PlaySound("inventory/siphongrenade/explode");
			A_SpawnItem("MetaArchvileFire");
			
			BlockThingsIterator it = BlockThingsIterator.Create(self,32,0);
			while (it.Next())
			{
				Actor mo = it.thing;
				
				if (mo is "MetaUnwilling")
				{
					if (meta_developer)
						Console.printf("Summoner Popcorn %i x %i uncomfortable with popcorn proximity", self.pos.x, self.pos.y);
					SetStateLabel("See");
					break;
				}
			}
			A_SpawnItem("MetaUnwilling");
		}
		Stop;
	}
}

class MetaSummonerWarpTrail : Actor
{
	Default
	{
		radius 10;
		height 10;
		+NOCLIP
		+NOGRAVITY
		+NOINTERACTION
		alpha 0.5;
		Renderstyle "add";
	}

	states
	{
	Spawn:
		SUMN E 0;
	DoTheThing:
		SUMN E 1
		{
			A_FadeOut(0.05);
		}
		loop;
	}
}



// The Infernis. Uses the Diabolist's attack from Supercharge and summons Demonic
// Troopers if they can't see the player, acts like a standard Archie if they can.

class MetaInfernis : MonsterCore
{
	Default
	{
		Health 800;
		Radius 20;
		Height 56;
		Mass 500;
		Speed 15;
		PainChance 10;
		Monster;
		MaxTargetRange 896;
		DropItem "BFGAmmo";
		+QUICKTORETALIATE
		+FLOORCLIP
		+NOTARGET
		SeeSound "monsters/infernis/see";
		PainSound "monsters/infernis/pain";
		DeathSound "monsters/infernis/die";
		ActiveSound "monsters/infernis/idle";
		MeleeSound "vile/stop";
		Obituary "$OB_INFERNIS";
		damagefactor "HolyWater", 1.5;
		painchance "HolyWater", 255;
		Tag "Infernis";
		scale 0.75;
		//$Category "Monsters/MetaDoom/Arch-Vile"
		//$Title "Infernis"
		//$Color 12
	}
	
	int hidingtimer;
	bool firsthide;

	States
	{
	Spawn:
		INF0 A 10 A_Look;
		Loop;
	See:
		INF1 AABBCCDDEEFFEEDDCCBB 2 
		{
			if (scurredtimer == 0)
			{
				// If you can't see the target, count the days until you do a
				// nasty to them.
				if (CheckIfTargetInLOS())
				{
					hidingtimer = 0;
					firsthide = true;
				} else {
					hidingtimer++;
					
					if (hidingtimer > 35)
					{
						hidingtimer = 0;
						
						//Console.printf("%i", Distance2D(target));
						
						// If the target is within 1024 units and you haven't done
						// it yet, do the Diabolist's attack from Supercharge and
						// flush the sucker out! Otherwise, summon Demonic Troopers.
						if (target && Distance2D(target) < 1024 && firsthide == true)
						{
							SetStateLabel("FlushOut");
							firsthide == false;
						} else {
							SetStateLabel("Summon");
						}
					}
				}
			}
			
			A_MetaVileChase();
		}
		Loop;
		
	Missile:
		INF1 G 0 BRIGHT A_PlaySound("monsters/archvile/magic", CHAN_VOICE);
		INF1 G 10 BRIGHT A_FaceTarget ;
		INF1 H 8 BRIGHT A_VileTarget("MetaArchvileFire");
		INF1 IJKLMN 8 BRIGHT A_FaceTarget;
		INF1 O 0 BRIGHT A_JumpIfInTargetInventory("FireExtinguished",1,"MissileFailed");
		INF1 O 8 BRIGHT A_VileAttack("monsters/archvile/boom", 20, 70, 70, 1, "Fire");
		INF1 P 20 BRIGHT;
		Goto See;
	MissileFailed:
		INF1 O 8 BRIGHT A_PlaySound("monsters/archvile/dud");
		INF1 P 20 BRIGHT;
		INF1 A 10;
		INF1 T 10;
		INF1 A 5;
		Goto See;
		
	Summon:
		INF1 A 0;
		INF1 A 0
		{
			A_StartSound("monsters/summoner/popcorn", CHAN_VOICE);
			
			A_SpawnItemEx("MetaInfernisPopcorn",0,0,32,4,0,0,0);
			A_SpawnItemEx("MetaInfernisPopcorn",0,0,32,4,0,0,90);
			A_SpawnItemEx("MetaInfernisPopcorn",0,0,32,4,0,0,180);
			A_SpawnItemEx("MetaInfernisPopcorn",0,0,32,4,0,0,270);
		}
		INF1 QRSRQRS 8 BRIGHT;
		Goto See;

	FlushOut:
		//INF1 G 0 A_Jump(256, "Summon");
		INF1 GH 4 A_FaceTarget;
		INF1 I 4
		{
			A_FaceTarget();
			
			if (target)
			{
				if (!target.CountInv("FireExtinguished"))
				{
					A_SpawnItemEx("MetaInfernisFire1", 0,0,0,0,0,0,0, SXF_SETMASTER | SXF_TRANSFERPOINTERS | SXF_NOCHECKPOSITION);
				} else {
					A_StartSound("monsters/archvile/dud");
				}
			}
		}
		INF1 II 3 A_FaceTarget();
		INF1 I 3 
		{
			A_FaceTarget();
			
			if (target)
			{
				if (!target.CountInv("FireExtinguished"))
				{
					A_SpawnItemEx("MetaInfernisFire2", 0,0,0,0,0,0,0, SXF_SETMASTER | SXF_TRANSFERPOINTERS | SXF_NOCHECKPOSITION);
				} else {
					A_StartSound("monsters/archvile/dud");
				}
			}
		}
		INF1 II 3 A_FaceTarget();
		INF1 I 3 
		{
			A_FaceTarget();
		
			if (target)
			{
				if (!target.CountInv("FireExtinguished"))
				{
					A_SpawnItemEx("MetaInfernisFire3", 0,0,0,0,0,0,0, SXF_SETMASTER | SXF_TRANSFERPOINTERS | SXF_NOCHECKPOSITION);
				} else {
					A_StartSound("monsters/archvile/dud");
				}
			}
		}
		INF1 II 3 A_FaceTarget();
		INF1 I 3 
		{
			A_FaceTarget();
		
			if (target)
			{
				if (!target.CountInv("FireExtinguished"))
				{
					A_SpawnItemEx("MetaInfernisFire4", 0,0,0,0,0,0,0, SXF_SETMASTER | SXF_TRANSFERPOINTERS | SXF_NOCHECKPOSITION);
				} else {
					A_StartSound("monsters/archvile/dud");
				}
			}
		}
		INF1 II 3 A_FaceTarget();
		INF1 I 3 A_FaceTarget;
		INF1 JKL 4;
		INF1 MN 5;
		INF1 O 5;
		INF1 P 10;
		INF1 A 0 A_Jump(128, "Summon");
		Goto See;
		
	Heal:
		INF1 A 0;
		INF1 A 0 A_PlaySound("monsters/archvile/resurrect", CHAN_VOICE);
		INF1 QRS 8 BRIGHT;
		Goto See;
	Pain:
		INF1 T 0;
		INF1 T 5 A_Pain;
		Goto See;
	Death:
		INF2 A 7 			// Make a filthy great mess once the Archvile dies,
		{					// to make a point of it not being rez-ible.
			bSPRITEFLIP = random(0,1);

			A_GiveToTarget("ScoreItem", 1000);
			A_PlaySound("monsters/archvile/gib",CHAN_AUTO,0.8);
			for (int i = 0; i < 5; i++)
			{
				A_SpawnProjectile ("FlyingBlood", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
				A_SpawnProjectile ("MetaSploosh", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
			}
			A_SpawnItemEx ("MetaGib3", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib4", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib5", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib6", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib3", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib4", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib5", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib6", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItem("BloodSplat");
			A_SpawnItem("SoulSpawner");
		}
		INF2 B 7 A_Scream;
		INF2 C 7 A_NoBlocking;
		INF2 D 7;
		INF2 E -1;
		Stop;
	}
}

class MetaInfernisFire1 : Actor
{
	Default
	{
		Radius 0;
		Height 0;
		Speed 0;
		+NOINTERACTION
		+MISSILE
		+MTHRUSPECIES
		Damagetype "Fire";
	}

	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_Warp(AAPTR_TARGET, 0, 0, 0, 0, WARPF_ABSOLUTEANGLE | WARPF_NOCHECKPOSITION);
		TNT1 A 0 A_StartSound("monsters/infernis/plum/start");
		PLUM KLMNOPQRST 2 A_SpawnItemEx("MetaInfernisFireDust", 0, 0, 0, frandom(-2, 2), frandom(-2, 2), frandom(2, 6), 0);
		PLUM A 0 A_Jump(256, "WaitLoop");
		Goto WaitLoop;
	WaitLoop:
		TNT1 AAAAAAAAAAAAAAAAAAAAA 2 A_SpawnItemEx("MetaInfernisFireDust", 0, 0, 0, frandom(-2, 2), frandom(-2, 2), frandom(2, 6), 0);
		Goto Death;
	Death:
		TNT1 A 0 A_SpawnItemEx("MetaInfernisExplosion", 0, 0, 0, 0, 0, 0, 0, SXF_SETMASTER | SXF_NOCHECKPOSITION);
		Stop;
	}
}

class MetaInfernisFire2 : MetaInfernisFire1
{
	States
	{
	WaitLoop:
		TNT1 AAAAAAAAAAAAAAAA 2 A_SpawnItemEx("MetaInfernisFireDust", 0, 0, 0, frandom(-2, 2), frandom(-2, 2), frandom(2, 6), 0);
		TNT1 A 1;
		Goto Death;
	}
}

class MetaInfernisFire3 : MetaInfernisFire1
{
	States
	{
	WaitLoop:
		TNT1 AAAAAAAAAAAA 2 A_SpawnItemEx("MetaInfernisFireDust", 0, 0, 0, frandom(-2, 2), frandom(-2, 2), frandom(2, 6), 0);
		Goto Death;
	}
}

class MetaInfernisFire4 : MetaInfernisFire1
{
	States
	{
	WaitLoop:
		TNT1 AAAAAAA 2 A_SpawnItemEx("MetaInfernisFireDust", 0, 0, 0, frandom(-2, 2), frandom(-2, 2), frandom(2, 6), 0);
		TNT1 A 1;
		Goto Death;
	}
}

class MetaInfernisExplosion : Actor
{
	Default
	{
		Height 16;
		Radius 8;
		Damagetype "Fire";
		+NOINTERACTION
		+MTHRUSPECIES
		Obituary "$OB_INFERNIS";
	}

	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("monsters/infernis/plum/explode");
		PLUM ABCDEFG 2 A_Explode(28, 35, XF_NOTMISSILE);
		PLUM HIJ 2;
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("monsters/infernis/plum/explode");
		PLUM ABCDEFG 2 A_Explode(28, 35, XF_NOTMISSILE);
		PLUM HIJ 2;
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("monsters/infernis/plum/explode");
		PLUM ABCDEFG 2 A_Explode(28, 35, XF_NOTMISSILE);
		PLUM HIJ 2;
		Stop;
	}
	
	override int DoSpecialDamage(Actor target, int damage, name damagetype)
	{
		if (target is "PlayerPawn" ||
		(target is "MonsterCore" && target.bBOSS == false && !(target is "MetaInfernis")))
		{
			int flingy = damage;
			if (flingy > 16)
			{
				flingy = 16;
			}
			
			target.vel.z = flingy;
		}
		
		if (target is "MetaInfernis")
		{
			damage = 0;
		}
		
		return Super.DoSpecialDamage(target, damage, damagetype);
	}
}

class MetaInfernisFireDust : Actor
{
	Default
	{
		+NOINTERACTION
		+MISSILE
		+NOGRAVITY
		+CLIENTSIDEONLY
		Speed 0;
		Scale 0.7;
	}

	States
	{
	Spawn:
		PLMD ABCDEF 2 A_Weave(frandom(-1, 1), 0, frandom(-2, 2), 0);
		Stop;
	}
}

class MetaInfernisPopcorn : Actor
{
	Default
	{
		+CANBOUNCEWATER
		Radius 20;
		Height 56;
		Speed 20;
		Damage 0;
		PROJECTILE;
		+RANDOMIZE
		+NOGRAVITY
		gravity 0.5;
		scale 0.5;
	}

	States
	{
	Spawn:
		BOSF A 0;
		BOSF ABCDABCD 3 BRIGHT;
	Death:
		TNT1 A 0 
		{
			A_PlaySound("inventory/siphongrenade/explode");
			A_SpawnItem("MetaArchvileFire");
			
			BlockThingsIterator it = BlockThingsIterator.Create(self,32,0);
			while (it.Next())
			{
				Actor mo = it.thing;
				
				if (mo is "MetaDemonicTrooper")
				{
					if (meta_developer)
						Console.printf("Infernis Popcorn %i x %i uncomfortable with popcorn proximity", self.pos.x, self.pos.y);
					SetStateLabel("See");
					break;
				}
			}
			A_SpawnItem("MetaDemonicTrooper");
		}
		Stop;
	}
}

