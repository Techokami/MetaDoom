/*
----------------------------
MetaDoom
Actor Definitions
Archvile
----------------------------
*/

// Currently more or less identical to the original Doom monster, behavior-wise.
// TODO: Twiddle with, add at least one variant!

class MetaArchvile : MonsterCore
{
	Default
	{
		Health 700;
		Radius 20;
		Height 56;
		Mass 500;
		Speed 15;
		PainChance 10;
		Monster;
		MaxTargetRange 896;
		DropItem "BFGAmmo";
		+QUICKTORETALIATE
		+FLOORCLIP
		+NOTARGET
		SeeSound "monsters/archvile/see";
		PainSound "monsters/archvile/pain";
		DeathSound "monsters/archvile/die";
		ActiveSound "monsters/archvile/idle";
		MeleeSound "vile/stop";
		Obituary "$OB_VILE";
		damagefactor "HolyWater", 1.5;
		painchance "HolyWater", 255;
		Tag "Arch-Vile";
		//$Category "Monsters/MetaDoom/Arch-Vile"
		//$Title "Arch-Vile"
		//$Color 12
	}

	States
	{
	Spawn:
		VILE AB 10 A_Look;
		Loop;
	See:
		VILE AABBCCDDEEFF 2 A_MetaVileChase;
		Loop;
	Missile:
		VILE G 0 BRIGHT A_PlaySound("monsters/archvile/magic", CHAN_VOICE);
		VILE G 10 BRIGHT A_FaceTarget ;
		VILE H 8 BRIGHT A_VileTarget("MetaArchvileFire");
		VILE IJKLMN 8 BRIGHT A_FaceTarget;
		VILE O 0 BRIGHT A_JumpIfInTargetInventory("FireExtinguished",1,"MissileFailed");
		VILE O 8 BRIGHT A_VileAttack("monsters/archvile/boom", 20, 70, 70, 1, "Fire");
		VILE P 20 BRIGHT;
		Goto See;
	MissileFailed:
		VILE O 8 BRIGHT A_PlaySound("monsters/archvile/dud");
		VILE P 20 BRIGHT;
		VILE A 10;
		VILE Q 10;
		VILE A 5;
		Goto See;
	Heal:
		VILE A 0;
		VILE A 0 A_PlaySound("monsters/archvile/resurrect", CHAN_VOICE);
		VILE "[\]" 10 BRIGHT;
		Goto See;
	Pain:
		VILE Q 0;
		VILE Q 5 A_Pain;
		Goto See;
	Death:
		VILE Q 7 			// Make a filthy great mess once the Archvile dies,
		{					// to make a point of it not being rez-ible.
			bSPRITEFLIP = random(0,1);

			A_GiveToTarget("ScoreItem", 1000);
			A_PlaySound("monsters/archvile/gib",CHAN_AUTO,0.8);
			for (int i = 0; i < 5; i++)
			{
				A_SpawnProjectile ("FlyingBlood", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
				A_SpawnProjectile ("MetaSploosh", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
			}
			A_SpawnItemEx ("MetaGib3", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib4", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib5", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib6", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib3", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib4", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib5", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib6", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItem("BloodSplat");
			A_SpawnItem("SoulSpawner");
		}
		VILE R 7 A_Scream;
		VILE S 7 A_NoBlocking;
		VILE TUVWXY 7;
		VILE Z -1;
		Stop;
	}
}

// Arch Vile Fire
class MetaArchvileFire : Actor
{
	Default
	{
		+NOBLOCKMAP
		+NOGRAVITY
		RenderStyle "Add";
		Alpha 1;
	}

	States
	{
	Spawn:
		FIRE A 2 BRIGHT  A_StartFire;
		FIRE BAB 2 BRIGHT  A_Fire();
		FIRE C 2 BRIGHT  { A_PlaySound("monsters/archvile/flames"); A_Fire(); }
		FIRE BCBCDCDCDEDED 2 BRIGHT  A_Fire();
		FIRE E 2 BRIGHT  { A_PlaySound("monsters/archvile/flames"); A_Fire(); }
		FIRE FEFEFGHGHGH 2 BRIGHT  A_Fire();
		Stop;
	}
}

// The Summoner, from Doom 2016.
// Hurls popcorn enemies out in babby bosscubes and zooms around like a bastard

class MetaSummoner : MonsterCore
{
	Default
	{
		Health 600;
		Radius 20;
		Height 56;
		Mass 500;
		Speed 16;
		PainChance 10;
		Monster;
		MaxTargetRange 896;
		DropItem "BFGAmmo";
		+QUICKTORETALIATE
		+FLOORCLIP
		+NOTARGET
		+FLOATBOB
		SeeSound "monsters/summoner/see";
		PainSound "monsters/summoner/pain";
		DeathSound "monsters/summoner/die";
		ActiveSound "monsters/summoner/idle";
		MeleeSound "vile/stop";
		Obituary "$OB_SUMMONER";
		damagefactor "HolyWater", 1.5;
		painchance "HolyWater", 255;
		yscale 0.9;
		tag "Summoner";
		//$Category "Monsters/MetaDoom/Arch-Vile"
		//$Title "Summoner"
		//$Color 12
	}
	
	int outtasight;
	

	States
	{
	Spawn:
		SUMN ABCDCB 10 A_Look;
		Loop;
	See:
		SUMN E 0 A_Jump(90, "Teleport");
		SUMN EEFFGG 2 A_MetaVileChase;
		SUMN G 0 A_Jump(90, "Teleport");
		SUMN GGFF 2 A_MetaVileChase;
		VILE A 0 A_Jump(90, "Popcorn");
		Loop;
	SeeAlreadyTeleportedLately:
		SUMN EEFFGG 2 A_MetaVileChase;
		SUMN GGFF 2 A_MetaVileChase;
		SUMN A 0 A_Jump(90, "Popcorn");
		goto See;
	Missile:
		SUMN A 0 A_Jump(90, "Popcorn");
		SUMN I 0 BRIGHT A_PlaySound("monsters/archvile/magic", CHAN_VOICE);
		SUMN I 10 BRIGHT A_FaceTarget;
		SUMN J 8 BRIGHT A_VileTarget("MetaArchvileFire");
		SUMN KLMN 8 BRIGHT A_FaceTarget;
		SUMN O 0 BRIGHT A_JumpIfInTargetInventory("FireExtinguished",1,"MissileFailed");
		SUMN O 8 BRIGHT A_VileAttack("monsters/archvile/boom", 20, 70, 70, 1, "Fire");
		SUMN PQ 10 BRIGHT;
		Goto See;
	MissileFailed:
		SUMN O 8 BRIGHT A_PlaySound("monsters/archvile/dud");
		SUMN P 20 BRIGHT;
		SUMN A 10;
		SUMN S 10;
		SUMN A 5;
		Goto See;
	Heal:
		SUMN A 0;
		SUMN A 0 A_PlaySound("monsters/archvile/resurrect", CHAN_VOICE);
		SUMN R 10 BRIGHT;
		Goto See;
	Popcorn:
		SUMN A 0
		{
			FLineTraceData SurfaceData;
			
			// Limit popcorning if can't see player
			if (CheckIfSeen())
			{
				if (outtasight < 2)
				{
					if (meta_developer)
							Console.printf("Summoner at %i x %i is summoning out of player sight", self.pos.x, self.pos.y);
					outtasight++;
				} else {
					if (meta_developer)
							Console.printf("Summoner at %i x %i isn't summoning out of player sight", self.pos.x, self.pos.y);
					SetStateLabel("See");
				}
			}

			// Prevent popcorning from happening if there's not enough room, one way or another
			BlockThingsIterator it = BlockThingsIterator.Create(self,32,0);
			while (it.Next())
			{
				Actor mo = it.thing;
				
				if (mo is "MetaUnwilling")
				{
					if (meta_developer)
						Console.printf("Summoner at %i x %i uncomfortable with popcorn proximity", self.pos.x, self.pos.y);
					SetStateLabel("See");
					break;
				}
			}
			
			for (int i = 0; i < 8; i++)
			{
				self.LineTrace(45*i, 32, 0, TRF_THRUACTORS, offsetz: self.height/2, data:SurfaceData);
				
				if (SurfaceData.HitType == SurfaceData.TRACE_HitWall)
				{
					if (meta_developer)
							Console.printf("Summoner at %i x %i doesn't have the room to summon", self.pos.x, self.pos.y);
						SetStateLabel("See");
				}
			}
		}
		SUMN NLKJ 4;
		SUMN I 0 
		{
			if (ceilingz - floorz < 256 || !A_SetSize(-1,256,true))
			{
				SetStateLabel("PopcornLow");
			}
			A_SetSize(-1, 56);
		}
	PopcornHigh:
		SUMN N 20 
		{
			A_PlaySound("monsters/summoner/popcorn", CHAN_VOICE);
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,54,random(8,16),0,random(0,8),random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,54,random(8,16),0,random(0,8),random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,54,random(8,16),0,random(0,8),random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,54,random(8,16),0,random(0,8),random(0,360));
		}
		SUMN RA 4;
		goto See;
	PopcornLow:
		SUMN N 20 
		{
			A_PlaySound("monsters/summoner/popcorn", CHAN_VOICE);
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,32,random(8,16),0,0,random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,32,random(8,16),0,0,random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,32,random(8,16),0,0,random(0,360));
			A_SpawnItemEx("MetaSummonerPopcorn",0,0,32,random(8,16),0,0,random(0,360));
		}
		SUMN RA 4;
		goto See;
	Teleport:
		SUMN A 5 BRIGHT;
		SUMN B 4 BRIGHT;
		SUMN C 2 BRIGHT;
		SUMN DABD 1 BRIGHT;
		VILE A 0 A_PlaySound("monsters/summoner/warp", CHAN_6);
		Goto TeleLoop;
	TeleLoop:
		TNT1 AAAAA 0 A_Chase(null, null);
		TNT1 A 0 A_SpawnItem("MetaSummonerWarpTrail");
		TNT1 AAAAA 0 A_Chase(null, null);
		TNT1 A 0 A_SpawnItem("MetaSummonerWarpTrail");
		TNT1 AAAAA 0 A_Wander;
		TNT1 A 0 A_SpawnItem("MetaSummonerWarpTrail");
		TNT1 AAAAA 0 A_Wander;
		TNT1 A 0 A_Jump(128, "TeleStop");
		loop;
	TeleStop:
		VILE A 0 A_PlaySound("monsters/summoner/warp", CHAN_7);
		SUMN ABC 4 BRIGHT;
		Goto SeeAlreadyTeleportedLately;
	Pain:
		SUMN R 5;
		SUMN R 5 A_Pain;
		SUMN A 0 A_Jump(128, "Teleport");
		Goto See;
	Death:
		SUMN T 7 			// Make a filthy great mess once the Archvile dies,
		{					// to make a point of it not being rez-ible.
			bSPRITEFLIP = random(0,1);

			A_GiveToTarget("ScoreItem", 1000);
			A_PlaySound("monsters/archvile/gib",CHAN_AUTO,0.8);

			for (int i = 0; i < 5; i++)
			{
				A_SpawnProjectile ("FlyingBlood", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
				A_SpawnProjectile ("MetaSploosh", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
			}

			A_SpawnItemEx ("MetaGib3", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib4", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib5", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib6", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib3", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib4", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib5", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItemEx ("MetaGib6", 1, 1, random(8,32), random(0,5), random(0,5), random(8,18), random(0,360), 128, 0);
			A_SpawnItem("BloodSplat");
			A_SpawnItem("SoulSpawner");
			bFLOATBOB = 0;
		}
		SUMN U 7 A_Scream;
		SUMN V 7 A_NoBlocking;
		SUMN WX 7;
		SUMN Y -1;
		Stop;
	}
}

class MetaSummonerPopcorn : Actor
{
	Default
	{
		+CANBOUNCEWATER
		Radius 20;
		Height 56;
		Speed 20;
		Damage 0;
		PROJECTILE;
		+RANDOMIZE
		-NOGRAVITY
		gravity 0.5;
		scale 0.5;
		SeeSound "inventory/throw";
	}

	States
	{
	Spawn:
		BOSF A 0;
		BOSF A 0 A_JumpIf((ceilingz - floorz) < 72, "SpawnLow");
	SpawnHigh:
		BOSF A 0 ThrustThingZ(0,32,0,1);
		goto Bounce;
	SpawnLow:
		BOSF A 0 A_ScaleVelocity(1.5);
		goto Bounce;
	Bounce:
		BOSF ABCD 3 BRIGHT;
		loop;
	Death:
		TNT1 A 0 
		{
			A_PlaySound("inventory/siphongrenade/explode");
			A_SpawnItem("MetaArchvileFire");
			
			BlockThingsIterator it = BlockThingsIterator.Create(self,32,0);
			while (it.Next())
			{
				Actor mo = it.thing;
				
				if (mo is "MetaUnwilling")
				{
					if (meta_developer)
						Console.printf("Summoner Popcorn %i x %i uncomfortable with popcorn proximity", self.pos.x, self.pos.y);
					SetStateLabel("See");
					break;
				}
			}
			A_SpawnItem("MetaUnwilling");
		}
		Stop;
	}
}

class MetaSummonerWarpTrail : Actor
{
	Default
	{
		radius 10;
		height 10;
		+NOCLIP
		+NOGRAVITY
		+NOINTERACTION
		alpha 0.5;
		Renderstyle "add";
	}

	states
	{
	Spawn:
		SUMN E 0;
	DoTheThing:
		SUMN E 1
		{
			A_FadeOut(0.05);
		}
		loop;
	}
}

// The Summoner's servants. Useless slow Quake-esque zombies, but they might
// well overwhem the player on a bad day.
class MetaUnwilling : MonsterCore
{
	Default
	{
		Health 20;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 4;
		PainChance 200;
		Monster;
		+FLOORCLIP
		-COUNTKILL
		SeeSound "monsters/unwilling/see";
		PainSound "monsters/unwilling/pain";
		DeathSound "monsters/unwilling/die";
		ActiveSound "monsters/unwilling/idle";
		HitObituary "$OB_SUMMONER_POPCORN";
		Obituary "$OB_SUMMONER_POPCORN";
		damagefactor "HolyWater", 0.25;
		painchance "HolyWater", 255;
		damagefactor "Axe", 50;
		//$Category "Monsters/MetaDoom/Arch-Vile"
		//$Title "Unwilling (Summoner Popcorn)"
		//$Color 12
	}

	States
	{
	Spawn:
		UNWI AB 10 A_Look;
		Loop;
	See:
		UNWI AABBCCDD 3 A_Chase;
		Loop;
	Melee:
	Missile:
		UNWI E 0 A_PlaySound("monsters/unwilling/attack", CHAN_VOICE);
		UNWI EF 4 A_FaceTarget;
		UNWI G 6 A_CustomComboAttack("UnwillingGibBall", 32, 3 * random(1, 8), "monsters/unwilling/punch");
		Goto See;
	Pain:
		UNWI H 2;
		UNWI H 2 A_Pain;
		Goto See;
	Punched:
		UNWI G 3;
		UNWI G 12 A_Pain;
		Goto See;
	Death:
		UNWI I 0 { bSPRITEFLIP = random(0,1); } // random chance of sprite flipping
		UNWI I 6 A_GiveToTarget("ScoreItem", 50);
		UNWI J 6 A_Scream;
		UNWI K 5;
		UNWI L 5 A_NoBlocking;
		UNWI M -1 A_PlaySound("bodyfalls/medium");
		Stop;
	XDeath:
		UNWI J 5 A_GiveToTarget("ScoreItem", 50);
		TNT1 A 0 A_SpawnItemEx("MetaUnwillingGibber",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS);
		Stop;
	Raise:
		UNWI M 0 { bSPRITEFLIP = 0; }
		UNWI MLKJI 8;
		Goto See;
	}
}

class UnwillingGibBall : Actor
{
	Default
	{
		Radius 4;
		Height 9;
		Health 40;
		DamageFunction (random(1,4));
		Speed 35;
		Gravity 0.5;
		Mass 0;
		PROJECTILE;
		+CANBOUNCEWATER
		+NOGRAVITY
		ReactionTime 120;
		Seesound "monsters/unwilling/fire";
		+NOBLOCKMAP
		+MISSILE
		decal "BloodSplat1";
	}

	States
	{
	Spawn:
		ZGIB AAAAA 1 A_SpawnItemEx("UnwillingGibTrail",0,0,0);
		ZGIB A 0 { bNOGRAVITY = 0; }
		Loop;
	Death:
		TNT1 A 1 A_PlaySound ("monsters/unwilling/gib");
		TNT1 A 0
		{
			if (pos.z <= (floorz + 32))
			{
				A_SpawnItem("BloodSplatSmall");
			}
		}
		Stop;
	Crash:
		TNT1 A 1 A_PlaySound ("monsters/unwilling/gib");
		Stop;
	}
}

class UnwillingGibTrail : Actor
{
	Default
	{
		Health 3;
		+NOINTERACTION
		+NOTELEPORT
		+NOGRAVITY
		Scale 0.8;
		RenderStyle "Translucent";
		Alpha 0.8;
	}

	States
	{
	Spawn:
		ZBLD ABCD 3;
		Stop;
	}
}

// Alternate version of MetaGibber to be less intense specifically for the Unwilling.
class MetaUnwillingGibber : Actor
{
	Default
	{
		radius 20;
		height 56;
		+NOCLIP
	}

	states
	{
	Spawn:
	    TNT1 A 0;
	    TNT1 A 0 A_PlaySound("gibbage/gib");
		TNT1 A 0
		{
			for (int i = 0; i < 5; i++)
			{
				A_SpawnProjectile ("FlyingBlood", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
				A_SpawnProjectile ("MetaSploosh", random(8,32), 0, random (0, 360), 2|CMF_BADPITCH, random (0, 160));
			}
			A_SpawnItem("BloodSplat");
		}
	    TNT1 A 1 A_SpawnItemEx ("MetaSploosh", 1, 1, random(8,32), random(0,5), random(0,5), random(8,14), random(0,360), 128, 0);
		TNT1 A 1 A_SpawnItemEx ("MetaSploosh", 1, 1, random(8,32), random(0,5), random(0,5), random(8,14), random(0,360), 128, 0);
		TNT1 A 1 A_SpawnItemEx ("MetaSploosh", 1, 1, random(8,32), random(0,5), random(0,5), random(8,14), random(0,360), 128, 0);
		TNT1 A 1 A_SpawnItemEx ("MetaSploosh", 1, 1, random(8,32), random(0,5), random(0,5), random(8,14), random(0,360), 128, 0);
		TNT1 A 1 A_SpawnItemEx ("MetaSploosh", 1, 1, random(8,32), random(0,5), random(0,5), random(8,14), random(0,360), 128, 0);
		TNT1 A 1 A_SpawnItemEx ("MetaSploosh", 1, 1, random(8,32), random(0,5), random(0,5), random(8,14), random(0,360), 128, 0);
		TNT1 A 1 A_SpawnItemEx ("MetaSploosh", 1, 1, random(8,32), random(0,5), random(0,5), random(8,14), random(0,360), 128, 0);
		TNT1 A 1 A_SpawnItemEx ("MetaSploosh", 1, 1, random(8,32), random(0,5), random(0,5), random(8,14), random(0,360), 128, 0);
		TNT1 A 1 A_SpawnItemEx ("MetaSploosh", 1, 1, random(8,32), random(0,5), random(0,5), random(8,14), random(0,360), 128, 0);
		TNT1 A 1 A_SpawnItemEx ("MetaSploosh", 1, 1, random(8,32), random(0,5), random(0,5), random(8,14), random(0,360), 128, 0);
	    Stop;
	}
}
