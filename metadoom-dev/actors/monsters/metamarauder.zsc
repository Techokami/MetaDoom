/*
----------------------------
MetaDoom
Actor Definitions
Marauder
----------------------------
*/

class MetaMarauderSpawner : Actor
{
	Default
	{
		radius 64;
		height 64;
		-SOLID
	}
	
	states
	{
		Spawn:
			TNT1 A 1 A_LookEx (0, 0, 512, 640, 360, "SpawnShit");
			loop;
		SpawnShit:
			TNT1 A 0 A_FaceTarget();
			TNT1 A 0 A_SpawnItemEx("MetaMarauderPortal", 0, 0, 0, 0, 0, 0, 0, SXF_SETTARGET);
			stop;
	}
}

class MetaMarauderPortal : Actor
{
	Default
	{
		radius 64;
		height 64;
		scale 0.001;
		//renderstyle "Add";
		-SOLID
		-NOBLOCKMAP
		+NOGRAVITY
		+ROLLSPRITE
		+ROLLCENTER
		+INTERPOLATEANGLES
	}
	
	states
	{
	Spawn:
		PARU A 0;
		PARU A 0
		{
			A_StartSound("monsters/marauder/portal/open", CHAN_AUTO, 0, 1.0, ATTN_NONE);
		}
	Open:
		PARU A 1 BRIGHT
		{
			A_FaceTarget();
			
			if (scale.x < 2.0)
			{
				A_SetScale(scale.x + 0.1);
			} else {
				SetStateLabel("SpawnBadMan");
			}
		}
		loop;
	SpawnBadMan:
		PARU A 35 BRIGHT;
		PARU A 16 BRIGHT
		{
			A_FaceTarget();
			A_StartSound("monsters/marauder/portal/enter", CHAN_AUTO, 0, 1.0, ATTN_NONE);
			A_SpawnItemEx("MetaMarauder", 0, 0, 0, 0, 0, 0, 0, SXF_SETTARGET);
		}
		PARU A 0
		{
			A_StartSound("monsters/marauder/portal/close", CHAN_AUTO, 0, 1.0, ATTN_NONE);
		}
		goto Close;
	Close:
		PARU A 1 BRIGHT
		{
			if (scale.x > 0.001)
			{
				A_SetScale(scale.x - 0.1);
			} else {
				A_Remove(AAPTR_DEFAULT, RMVF_EVERYTHING);
			}
		}
		loop;
	}
	
	override void Tick()
	{
		roll = roll + 8;
		
		Super.Tick();
	}
}

class MetaMarauder : MonsterCore
{
	Default
	{
		Health 500;
		Radius 20;
		Height 56;
		Speed 8;
		PainChance 200;
		Monster;
		+FLOORCLIP
		-DOHARMSPECIES
		+NODAMAGE
		+NOBLOOD
		DropItem "BFGAmmo";
		DeathSound "monsters/marauder/die";
		PainSound "monsters/marauder/pain";
		Obituary "$OB_MARAUDER";
		damagefactor "HolyWater", 0;
		painchance "HolyWater", 0;
		painchance "Fist", 0;
		Tag "Marauder";
		//$Category "Monsters/MetaDoom/"
		//$Title "Marauder"
		//$Color 12
	}
	
	bool stunned;
	bool shielding;
	int shielddamage;
	
	States
	{
	Spawn:
		MARU AB 10 A_Look;
		Loop;
	See:
		MARU AAAABBBBCCCCDDDD 2 A_MetaChase("Missile","Missile",CHF_FASTCHASE);
		Loop;
	Missile:
		MARU A 0
		{
			if (target && target.health > 0)
			{
				if (Distance3D(target) < 168)
				{
					Console.printf("%i: Too close, shotgun.", Distance3D(target));
					SetStateLabel("MissileShotgun");
				} else if (Distance3D(target) > 240) {
					Console.printf("%i: Too far, axes.", Distance3D(target));
					SetStateLabel("MissileAxe");
				} else {
					Console.printf("%i: Sweet spot!", Distance3D(target));
					SetStateLabel("MissileSweetSpot");
				}
			}
		}
		Goto See;
	MissileShotgun:
		MARU E 10 A_FaceTarget;
		MARU F 10 BRIGHT
		{
			A_SpawnProjectile("MonsterShotgunGuyTracer",32,0,random(-16,16),CMF_OFFSETPITCH,random(-4,4));
			A_SpawnProjectile("MonsterShotgunGuyTracer",32,0,random(-16,16),CMF_OFFSETPITCH,random(-4,16));
			A_SpawnProjectile("MonsterShotgunGuyTracer",32,0,random(-16,16),CMF_OFFSETPITCH,random(-4,4));
			A_SpawnProjectile("MonsterShotgunGuyTracer",32,0,random(-2,2),CMF_OFFSETPITCH,random(-2,2));
			A_PlaySound("monsters/shotgunguy/fire");
		}
		MARU E 10;
		Goto See;
	MissileAxe:
		MARU GH 4 A_FaceTarget;
		MARU I 8 BRIGHT
		{
			A_SpawnProjectile("MetaMarauderAxe");
			A_PlaySound("monsters/marauder/effort");
		}
		MARU A 8;
		Goto See;
	MissileSweetSpot:
		MARU J 4
		{
			A_Stop();
			A_FaceTarget();
			//A_Recoil(-32);
			A_PlaySound("monsters/marauder/eyeflare");
			A_SpawnItemEx("MetaMarauderEyeflash", 1, 0, 56, 0, 0, 0, SXF_SETMASTER);
			
			bFORCEPAIN = 1;
			bNODAMAGE = 0;
			bNOBLOOD = 0;
		}
		MARU K 0 
		{
			A_StartSound("monsters/marauder/axe/charge");
			A_StartSound("monsters/marauder/charge", CHAN_VOICE);
		}
		MARU KLMNO 3 
		{
			A_FaceTarget();
			A_Recoil(-8);
		}
		MARU P 8
		{
			A_Stop();
			A_CustomMeleeAttack(random(1, 10) * 6, "monsters/marauder/axe/hitactor");
		}
		MARU A 0
		{
			bFORCEPAIN = 0;
			bNODAMAGE = 1;
			bNOBLOOD = 1;
		}
		Goto See;
		
	Pain:
		MARU A 0
		{
			if (bNODAMAGE)
			{
				SetStateLabel("PainShield");
			} else {
				SetStateLabel("Stunned");
			}
		}
		goto See;
	PainShield:
		MARU J 0
		{
			bInvulnerable = true;
		}
		MARU J 0
		{
			if (!shielding)
			{
				A_SpawnItemEx("MetaMarauderShield", 32, 0, 3, 0, 0, 0, SXF_SETMASTER);
				shielding = true;
			}
		}
		MARU JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ 1
		{
			A_FaceTarget();
		}
		MARU O 0
		{
			bInvulnerable = false;
			A_RemoveChildren(true, RMVF_EVERYTHING);
			shielding = false;
			
			if (shielddamage > 100)
			{
				SetStateLabel("Summon");
			}
			
			shielddamage = 0;
		}
		Goto See;
		
	Stunned:
		MARU A 0
		{
			bNOPAIN = 1;
			bNODAMAGE = 0;
			bNOBLOOD = 0;
			
			stunned = true;
			
			A_SpawnItem("HolySweat",0,height-2);
			
			A_Pain();
		}
		MARU Q 4;
		MARP ABACABACABAC 4;
		MARU A 8
		{
			bNOPAIN = 0;
			bNODAMAGE = 1;
			bNOBLOOD = 1;
			
			stunned = false;
			
			A_FaceTarget();
		}
		goto See;
		
	Summon:
		MARU G 0;
		MARU G 0
		{
			shielddamage = 0;
			
			A_StartSound("monsters/summoner/popcorn", CHAN_VOICE);
			
			A_SpawnItemEx("MetaMarauderPopcorn",0,0,32,4,0,0,90);
			A_SpawnItemEx("MetaMarauderPopcorn",0,0,32,4,0,0,270);
		}
		MARU GHI 4 BRIGHT;
		Goto See;
		
	Death:
		MARU R 0 { bSPRITEFLIP = random(0,1); } // random chance of sprite flipping
		TNT1 A 0 
		{
			A_SpawnItem("SoulSpawner");
			
			A_MetaPinata("MetaHealthPinataPerm", 4);
			A_MetaPinata("MetaArmorPinata", 4);
			A_MetaPinata("MetaPinataClip", 4);
			A_MetaPinata("MetaPinataShell", 4);
			A_MetaPinata("MetaPinataRocket", 4);
			A_MetaPinata("MetaPinataCell", 4);
		}
		MARU R 5 A_GiveToTarget("ScoreItem", 8000);
		MARU S 5 A_Scream;
		MARU T 5 A_NoBlocking;
		MARU UVWX 5;
		MARU Y -1 A_PlaySound("bodyfalls/heavy");
		Stop;
	XDeath:
		TNT1 A 0 A_SpawnItem("SoulSpawner");
		MARU R 5 A_GiveToTarget("ScoreItem", 8000);
		"####" # 0 A_Fall;
		TNT1 A 0 A_SpawnItemEx("MetaGibber",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS);
		Stop;
	}
	
	override int DamageMobj(Actor inflictor, Actor source, int damage, Name mod, int flags, double angle)
	{
		if (stunned)
		{
			A_Pain();
		}
		
		if (shielding)
		{
			shielddamage = shielddamage + damage;
		}
		
		return Super.DamageMobj(inflictor, source, damage, mod, flags, angle);
	}
}

class MetaMarauderAxe : Actor 
{
	Default
	{
		Radius 10;
		Height 8;
		Speed 18;
		Damage 2;
		Projectile;
		-NOBLOCKMAP
		-ACTIVATEIMPACT
		-ACTIVATEPCROSS
		+WINDTHRUST
		+THRUGHOST
		DeathSound "monsters/marauder/axe/hitworld";
	}

	States
	{
	Spawn:
		SPAX A 3 BRIGHT A_StartSound("monsters/marauder/axe/fly");
		SPAX BC 3 BRIGHT;
		Loop;
	Death:
		SPAX DEF 6 BRIGHT;
		Stop;
	}
}

class MetaMarauderShield : Actor
{
	Default
	{
		-SOLID
		+WALLSPRITE
		+NOGRAVITY
	}
	
	States
	{
		Spawn:
			MARS AB 1 BRIGHT
			{
				if (target)
				{
					master = target;
					A_Warp(AAPTR_TARGET, 32, 0, 3, target.angle, WARPF_ABSOLUTEANGLE);
				}
			}
			Loop;
	}
}

class MetaMarauderPopcorn : Actor
{
	Default
	{
		+CANBOUNCEWATER
		Radius 20;
		Height 56;
		Speed 20;
		Damage 0;
		PROJECTILE;
		+RANDOMIZE
		+NOGRAVITY
		gravity 0.5;
		scale 0.5;
	}

	States
	{
	Spawn:
		BOSF A 0;
		BOSF ABCDABCD 3 BRIGHT;
	Death:
		TNT1 A 0 
		{
			A_PlaySound("inventory/siphongrenade/explode");
			A_SpawnItem("MetaArchvileFire");
			
			BlockThingsIterator it = BlockThingsIterator.Create(self,32,0);
			while (it.Next())
			{
				Actor mo = it.thing;
				
				if (mo is "MetaSpiritWolf")
				{
					if (meta_developer)
						Console.printf("Marauder Popcorn %i x %i uncomfortable with popcorn proximity", self.pos.x, self.pos.y);
					SetStateLabel("See");
					break;
				}
			}
			A_SpawnItem("MetaSpiritWolf");
		}
		Stop;
	}
}

class MetaMarauderEyeflash : Actor
{
	Default
	{
		-SOLID
		+NOGRAVITY
		scale 0.4;
	}
	
	States
	{
		Spawn:
			BFE1 ABCD 1 BRIGHT
			{
				if (target)
				{
					A_Warp(AAPTR_TARGET, 1, 0, 54, target.angle, WARPF_ABSOLUTEANGLE);
				}
			}
			stop;
	}
}