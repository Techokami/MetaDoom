/*
----------------------------
MetaDoom
Actor Definitions
Revenant
----------------------------
*/

// Currently more or less identical to the original Doom monster, behavior-wise.

class MetaRevenant : MonsterCore
{
	Default
	{
		Health 300;
		Radius 20;
		Height 56;
		Mass 500;
		Speed 10;
		PainChance 100;
		Monster;
		MeleeThreshold 196;
		+MISSILEMORE
		+FLOORCLIP
		SeeSound "monsters/revenant/see";
		PainSound "monsters/revenant/pain";
		DeathSound "monsters/revenant/death";
		ActiveSound "monsters/revenant/idle";
		MeleeSound "skeleton/melee";
		HitObituary "$OB_UNDEADHIT";
		Obituary "$OB_UNDEAD";
		Species "Revenant";
		MonsterCore.CanBeScared false;
		Tag "Revenant";
		//$Category "Monsters/MetaDoom/Revenant"
		//$Title "Revenant"
		//$Color 12
	}

	States
	{
	Spawn:
		SKEL AB 10 A_Look;
		Loop;
	See:
		SKEL AABBCCDDEEFF 2 A_Chase;
		Loop;
	Melee:
		SKEL G 0 A_FaceTarget;
		SKEL G 6 { A_PlaySound("monsters/revenant/wiff"); A_FaceTarget(); }
		SKEL H 6 A_FaceTarget;
		SKEL I 6 A_CustomMeleeAttack(random(1, 10) * 6, "monsters/revenant/hit");
		Goto See;
	Missile:
		SKEL J 0 Bright A_FaceTarget;
		SKEL J 10 Bright A_FaceTarget;
		SKEL K 10 
		{
			if ((ceilingz - floorz) > 72)
			{
				int rando;
				rando = random(0,1);
				if (rando == 0)
				{
					A_SpawnProjectile ("MetaRevenantTracer", 68, -8);
				} else {
					A_SpawnProjectile ("MetaRevenantTracer", 68, 8);
				}
			} else {
				A_SkelMissile();
			}
		}
		SKEL K 10 A_FaceTarget;
		Goto See;
	Pain:
		SKEL L 5;
		SKEL L 5 A_Pain;
		Goto See;
	Death:
		SKEL L 0 { bSPRITEFLIP = random(0,1); } // random chance of sprite flipping
		TNT1 A 0 A_SpawnItem("SoulSpawner");
		SKEL L 7 A_GiveToTarget("ScoreItem", 1200);
		SKEL M 7 A_PlaySound("monsters/revenant/boned");
		SKEL N 7 A_Scream;
		SKEL O 7 A_NoBlocking;
		SKEL P 7 A_PlaySound("bodyfalls/revenant");
		SKEL Q -1;
		Stop;
	Raise:
		SKEL Q 5 { bSPRITEFLIP = 0; }
		SKEL PONML 5;
		Goto See;
	}
}

class MetaRevenantTracer : Actor replaces RevenantTracer
{
	Default
	{
		Radius 11;
		Height 8;
		Speed 10;
		Damage 10;
		Projectile;
		+SEEKERMISSILE
		+RANDOMIZE
		SeeSound "monsters/revenant/fire";
		//DeathSound "skeleton/tracex";
		decal "RevenantScorch";
		RenderStyle "Add";
	}

	States
	{
	Spawn:
		FATB A 0;
		FATB A 0 A_JumpIfInventory("ExtinguisherToken",1,"Extinguished");
		FATB A 2 Bright A_Tracer;
		FATB A 0 A_JumpIfInventory("ExtinguisherToken",1,"Extinguished");
		FATB B 2 Bright A_Tracer;
		Loop;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItem("MetaRevenantTracerExplosion");
		Stop;
	Extinguished:
		BAL1 A 0 A_PlaySound("monsters/lostsoul/extinguish");
		TNT1 AAAAA 1 A_SpawnItem ("DoomImpBallEffect", 0, 0, 0, 0);
		stop;
	}
}

class MetaRevenantTracerSmoke : Actor replaces RevenantTracerSmoke
{
	Default
	{
		+NOINTERACTION
		+NOGRAVITY
	}

	states
	{
	Spawn:
		PUF2 A 0 ;
		PUF2 A 0 A_PlaySound("monsters/revenant/missile/beep");
		PUF2 ABC 2 A_FadeOut;
	Finalize:
		PUF2 D 2 A_FadeOut;
		loop;
	}
}

class MetaRevenantTracerExplosion : MetaExplosion
{
	Default
	{
		//scale 0.5;
	}

	States
	{
		Spawn:
		FBXP A 0;
		FBXP A 2 BRIGHT
		{
			A_PlaySound("weapons/shotgun/grenade", CHAN_WEAPON);
			A_Quake (3,5,0,750,0);
			A_SpawnItem("ShockwaveSmall");
		}
		FBXP B 2 BRIGHT;
		FBXP C 2 BRIGHT;
		Stop;
	}
}

// The Fiend - the Doom 4 Revenant, using a name from Doom 2 RPG. (Not Quake!)
// Has a jetpack and a stream of micro-missiles.

class MetaFiend : MonsterCore
{
	Default
	{
		Health 250;
		Radius 20;
		Height 56;
		Mass 500;
		Speed 10;
		PainChance 100;
		Monster;
		MeleeThreshold 196;
		+MISSILEMORE
		+FLOORCLIP
		gravity 0.8;
		SeeSound "monsters/fiend/see";
		PainSound "monsters/fiend/pain";
		DeathSound "monsters/fiend/die";
		ActiveSound "monsters/fiend/idle";
		MeleeSound "skeleton/melee";
		HitObituary "$OB_FIENDHIT";
		Obituary "$OB_FIEND";
		Species "Revenant";
		MonsterCore.CanBeScared false;
		Tag "Fiend";
		//$Category "Monsters/MetaDoom/Revenant"
		//$Title "Fiend"
		//$Color 12
	}
	
	vector2 neckchecker;

	States
	{
	Spawn:
		FIEN AB 10 A_Look;
		Loop;
	See:
		//FIEN A 0 A_Jump(256,"JumpAttackFull");					// for debug
		FIEN AABBCCDDEEFF 2 A_Chase;
		FIEN A 0 { bDROPOFF = 0; }									// Try and fix instances of being "stuck" on an edge after jumping
		Loop;
	Melee:
		FIEN G 0 A_FaceTarget;
		FIEN G 6 { A_PlaySound("monsters/revenant/wiff"); A_FaceTarget(); }
		FIEN H 6 A_FaceTarget;
		FIEN I 6 A_CustomMeleeAttack(random(1, 10) * 6, "monsters/revenant/hit");
		Goto See;
	Missile:
		FIEN J 0; //A_Jump(256,"MissileMacross");					// for debug
		FIEN J 0 A_CheckRange(256,"MissileDistant",1);
		FIEN J 0 A_Jump(96,"MissileMacross");
		goto MissileClassic;
	MissileDistant:
		FIEN J 0 A_Jump(128,"JumpAttack");
		FIEN J 0 A_Jump(96,"MissileMacross");
		goto MissileClassic;
	MissileClassic:
		FIEN J 0 Bright A_FaceTarget;
		FIEN J 10 Bright A_FaceTarget;
		FIEN K 10
		{
			if ((ceilingz - floorz) > 72)
			{
				int rando;
				rando = random(0,1);
				if (rando == 0)
				{
					A_SpawnProjectile ("MetaRevenantTracer", 68, -8);
				} else {
					A_SpawnProjectile ("MetaRevenantTracer", 68, 8);
				}
			} else {
				A_SkelMissile();
			}
		}
		FIEN K 10 A_FaceTarget;
		Goto See;
	MissileMacross:
		FIEN K 0 A_PlaySound("monsters/fiend/arm");
		FIEN K 5 A_FaceTarget;
		FIEN TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT 1
		{ 
			A_FaceTarget();
			A_CustomRailgun ((0), 8, "", "Red", RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT, 1, 0, "NoBloodPuff", 0, 0, 0, 8, 0.5, 1,"None",32);
			A_CustomRailgun ((0), -16, "", "Red", RGF_SILENT|RGF_NOPIERCING|RGF_FULLBRIGHT, 1, 0, "NoBloodPuff", 0, 0, 0, 8, 0.5, 1,"None",32);
		}
		FIEN R 4 bright
		{
			A_PlaySound("weapons/machinegun/missile", CHAN_WEAPON);
			A_SpawnProjectile ("FiendMicroRocket", 50, 8);
		}
		FIEN T 4 A_FaceTarget;
		FIEN S 4 bright
		{
			A_PlaySound("weapons/machinegun/missile", CHAN_WEAPON);
			A_SpawnProjectile ("FiendMicroRocket", 50, -8);
		}
		FIEN T 4 A_FaceTarget;
		FIEN R 4 bright
		{
			A_PlaySound("weapons/machinegun/missile", CHAN_WEAPON);
			A_SpawnProjectile ("FiendMicroRocket", 50, 8);
		}
		FIEN T 4 A_FaceTarget;
		FIEN S 4 bright
		{
			A_PlaySound("weapons/machinegun/missile", CHAN_WEAPON);
			A_SpawnProjectile ("FiendMicroRocket", 50, -8);
		}
		FIEN T 4 A_FaceTarget;
		FIEN K 10 A_FaceTarget;
		Goto See;
	JumpAttack:
		FIEN K 0;
		FIEN K 0 A_JumpIf(meta_mapbreakers == 1, "JumpAttackFull");
		goto JumpAttackHalf;
	JumpAttackFull:
		FIEN K 0 A_FaceTarget;
		FIEN K 0 
		{
			// Make something resembling an effort to not swan-dive into toxic waste.
			// Not perfect, but that probably makes it more realistic...
			neckchecker = level.Vec2Offset (self.pos.xy, AngleToVector (self.angle, 460));
			
			if (level.PointInSector(neckchecker).damageamount != 0)
			{
				if (meta_developer)
					Console.printf("Fiend at %i x %i declined to swan-dive into nukage", self.pos.x, self.pos.y);
				SetStateLabel("MissileMacross");
			}
		}
		FIEN K 0 A_PlaySound("monsters/fiend/jet");
		FIEN K 4 { ThrustThingZ(0,64,0,0); ThrustThing(angle*256/360, 12, 0, 0); }
	JumpAttackLoop:
		FIEN KKK 1 A_CheckSolidFooting("JumpAttackLanding");
		FIEN K 1 { A_SpawnItem("FiendJetTrail",-8, 16); A_CheckSolidFooting("JumpAttackLanding"); }
		loop;
	JumpAttackLanding:
		FIEN T 0 A_Quake (2,8,0,2048,0);
		FIEN T 10
		{
			A_Stop();
			A_PlaySound("monsters/fiend/land");
		}
		BARO Z 0 { bDROPOFF = 1; }
		goto See;
	JumpAttackHalf:
		FIEN K 0 A_FaceTarget;
		FIEN K 0 A_PlaySound("monsters/fiend/jet");
		FIEN K 4 ThrustThingZ(0,64,0,0);
		goto JumpAttackLoop;
	Pain:
		FIEN L 5;
		FIEN L 5 A_Pain;
		Goto See;
	Death:
		FIEN L 0 { bSPRITEFLIP = random(0,1); } // random chance of sprite flipping
		TNT1 A 0 A_SpawnItem("SoulSpawner");
		FIEN L 7 A_GiveToTarget("ScoreItem", 1200);
		FIEN M 7 A_PlaySound("monsters/revenant/boned");
		FIEN N 7 A_Scream;
		FIEN O 7 A_NoBlocking;
		FIEN P 7 A_PlaySound("bodyfalls/revenant");
		FIEN Q -1;
		Stop;
	Raise:
		FIEN Q 5 { bSPRITEFLIP = 0; }
		FIEN PONML 5;
		Goto See;
	}
}

class FiendMicroRocket : MicroRocket
{
	Default
	{
		Damage 2;
		Obituary "$OB_FIENDSWARM";
	}

	States
	{
	Death:
		MISL A 4 Bright;
		TNT1 A 0 A_SpawnItemEx("FiendMicroRocketExplosion",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS);
		Stop;
	}
}

class FiendMicroRocketExplosion : MetaExplosion
{
	Default
	{
		scale 0.3;
		Obituary "$OB_FIENDSWARM"; 
	}

	States
	{
		Spawn:
		EXPL A 0;
		EXPL A 2 BRIGHT
		{
			A_PlaySound("weapons/shotgun/grenade", CHAN_WEAPON);
			A_Explode(8,64);
			A_Quake (1,3,0,750,0);
		}
		EXPL B 2 BRIGHT;
		EXPL C 2 BRIGHT;
		EXPL DEF 2;
		Stop;
	}
}

class FiendJetTrail : Actor
{
	Default
	{
		Radius 1;
		Height 1;
		+NOINTERACTION
		-SOLID
		RenderStyle "Add";
	}

	States
	{
		Spawn:
		FX14 DEFGH 2 bright;
		Stop;
	}
}