/*
----------------------------
MetaDoom
ZScript Definitions
Lore Item Spawner
----------------------------
*/

// This handles the potential spawning of lore items in secret rooms.
// It should be about a 10% chance in secret sectors that have room for such
// things to feasibly appear in (ie. not a closed door like half the fecking
// secret sectors in Doom E1...
class MetaLoreItems : EventHandler
{
	override void WorldLoaded(WorldEvent e)
	{
		// If the map has the MetaDoomMapID actor, than it means the mapper wants to
		// place loot as they damn well please. So, like, don't place it automagically.
		bool metamap = false;
		
		//BlockThingsIterator it = BlockThingsIterator.CreateFromPos(0,0,0,0,32767,0);
		ThinkerIterator it = ThinkerIterator.Create("MetaDoomMapID");
		Actor mo;
        while (mo = MetaDoomMapID(it.Next()))
        {
			if (meta_developer)
				Console.printf("Lore Item: This is a MetaDoom map, snuff the lore item spawning!");
			metamap = true;
		}
		
		for (int i = 0; i < level.Sectors.Size(); i++)
		{
			// Grab the center point of all sectors in the map.
			let c = level.Sectors[i].centerspot;
			Vector3 spam3 = (c.x, c.y, level.Sectors[i].floorplane.ZAtPoint(c));
			
			// Is the selected sector a secret, and is its center point actually within playable space?
			if (level.IsPointInMap(spam3) && level.Sectors[i].IsSecret())
			{
				if (metamap == false && meta_lootspawns == 1)
				{
					// Do an RNG roll - have lore items only have a 10% chance of spawning.
					int lorerng = random(0,100);
					
					if (lorerng <= 10)
					{
						// Make sure the secret isn't a closed door like in E1M1, so the item has room to spawn.
						if (level.Sectors[i].floorplane.ZAtPoint(c) != level.Sectors[i].ceilingplane.ZAtPoint(c))
						{
							Actor newitem = Actor.Spawn("MetaLoreItemSpawner", spam3);
							
							// Fiddle around with spawn location to try and minimise
							// chances of overlapping a more important item.
							BlockThingsIterator bit = BlockThingsIterator.Create(newitem,64,0);
							while (bit.Next())
							{
								Actor fo = bit.thing;
								
								if (fo is "Inventory" || fo is "Weapon")
								{
									if (meta_developer)
										Console.printf("Lore Item: Spawner at %i x %i overlapping an item, moving...", c.x, c.y);
									//newitem.speed = 2;									
									newitem.A_Face(fo, 0, 270, 180, 0, 0);
									newitem.vel.x = 4;
								}
							}
							
							if (meta_developer)
								Console.printf("Lore Item: Spawned at %i x %i", c.x, c.y);
						} else {
							if (meta_developer && !level.IsPointInMap(spam3))
							{
								Console.printf("Lore Item: Failed to spawn at %i x %i (Outside of Map)", c.x, c.y);
							}
							else if (meta_developer && (level.Sectors[i].floorplane.ZAtPoint(c) == level.Sectors[i].ceilingplane.ZAtPoint(c)))
							{
								Console.printf("Lore Item: Failed to spawn at %i x %i (Door Stuck!)", c.x, c.y);
							}
							else if (meta_developer)
							{
								Console.printf("Lore Item: Failed to spawn at %i x %i (Dunno Why, Though)", c.x, c.y);
							}
						}
					} else {
						if (meta_developer)
								Console.printf("Lore Items: Failed RNG Roll (%i)", lorerng);
					}
				}
			}
		}
	}
}